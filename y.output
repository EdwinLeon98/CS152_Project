Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams
    5         | FUNCTION IDENT SEMICOLON BEGIN_PARAMS error
    6         | FUNCTION IDENT SEMICOLON error funcparams
    7         | FUNCTION IDENT error BEGIN_PARAMS funcparams
    8         | FUNCTION error SEMICOLON BEGIN_PARAMS funcparams

    9 funcparams: declaration1 SEMICOLON funcparams
   10           | END_PARAMS BEGIN_LOCALS funclocals
   11           | declaration1 error funcparams
   12           | END_PARAMS error funclocals
   13           | END_PARAMS BEGIN_LOCALS error BEGIN_BODY funcbody

   14 funclocals: declaration2 SEMICOLON funclocals
   15           | END_LOCALS BEGIN_BODY funcbody
   16           | declaration2 error funclocals
   17           | END_LOCALS error funcbody

   18 funcbody: statement SEMICOLON END_BODY
   19         | statement SEMICOLON funcbody
   20         | statement SEMICOLON error
   21         | statement error funcbody
   22         | error SEMICOLON END_BODY
   23         | statement error END_BODY

   24 declaration1: IDENT COMMA declaration1
   25             | IDENT COLON INTEGER
   26             | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   27             | IDENT error
   28             | error

   29 declaration2: IDENT COMMA declaration2
   30             | IDENT COLON INTEGER
   31             | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   32             | IDENT error
   33             | error

   34 statement: var ASSIGN expression
   35          | IF boolexpr THEN if
   36          | WHILE boolexpr BEGINLOOP while
   37          | DO BEGINLOOP dowhile
   38          | READ rfunc
   39          | WRITE wfunc
   40          | READ var
   41          | WRITE var
   42          | BREAK
   43          | RETURN expression
   44          | var error expression
   45          | var ASSIGN error ADD expression
   46          | var ASSIGN error SUB expression
   47          | IF boolexpr error if
   48          | WHILE boolexpr error while
   49          | WHILE boolexpr BEGINLOOP error statement
   50          | WHILE boolexpr BEGINLOOP error ENDLOOP
   51          | DO error dowhile
   52          | READ error
   53          | WRITE error
   54          | RETURN error
   55          | WHILE error boolexpr2

   56 if: statement SEMICOLON if
   57   | ELSE statement SEMICOLON if
   58   | ENDIF
   59   | statement error if
   60   | error

   61 while: statement SEMICOLON while
   62      | ENDLOOP
   63      | statement error while
   64      | statement SEMICOLON error statement
   65      | statement SEMICOLON error ENDLOOP

   66 dowhile: statement SEMICOLON dowhile
   67        | ENDLOOP WHILE boolexpr
   68        | statement error
   69        | error
   70        | ENDLOOP error
   71        | ENDLOOP WHILE error

   72 rfunc: var COMMA rfunc
   73      | var COMMA var
   74      | var COMMA error

   75 wfunc: var COMMA wfunc
   76      | var COMMA var
   77      | var COMMA error

   78 boolexpr: relandexpr
   79         | relandexpr boolexpr2

   80 boolexpr2: OR relandexpr boolexpr2
   81          | OR relandexpr

   82 relandexpr: relexpr
   83           | relexpr relandexpr2

   84 relandexpr2: AND relexpr relandexpr2
   85            | AND relexpr

   86 relexpr: NOT relexpr2
   87        | relexpr2

   88 relexpr2: expression comp expression
   89         | TRUE
   90         | FALSE
   91         | L_PAREN boolexpr R_PAREN
   92         | expression error

   93 comp: EQ
   94     | NEQ
   95     | LT
   96     | GT
   97     | LTE
   98     | GTE
   99     | error

  100 expression: multexpr
  101           | multexpr ADD expression
  102           | multexpr SUB expression

  103 multexpr: term
  104         | term MULT multexpr
  105         | term DIV multexpr
  106         | term MOD multexpr

  107 term: term1
  108     | SUB term1
  109     | term2

  110 term1: var
  111      | NUMBER
  112      | L_PAREN expression R_PAREN

  113 term2: IDENT L_PAREN term3 R_PAREN

  114 term3: %empty
  115      | expression
  116      | expression COMMA term3

  117 var: IDENT
  118    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 5 6 7 8 11 12 13 16 17 20 21 22 23 27 28 32 33 44 45 46
    47 48 49 50 51 52 53 54 55 59 60 63 64 65 68 69 70 71 74 77 92
    99
SEMICOLON (258) 4 5 6 8 9 14 18 19 20 22 56 57 61 64 65 66
COLON (259) 25 26 30 31
COMMA (260) 24 29 72 73 74 75 76 77 116
L_PAREN (261) 91 112 113
R_PAREN (262) 91 112 113
L_SQUARE_BRACKET (263) 26 31 118
R_SQUARE_BRACKET (264) 26 31 118
ASSIGN (265) 34 45 46
EQ (266) 93
NEQ (267) 94
LT (268) 95
GT (269) 96
LTE (270) 97
GTE (271) 98
SUB (272) 46 102 108
ADD (273) 45 101
MULT (274) 104
DIV (275) 105
MOD (276) 106
FUNCTION (277) 4 5 6 7 8
BEGIN_PARAMS (278) 4 5 7 8
END_PARAMS (279) 10 12 13
BEGIN_LOCALS (280) 10 13
END_LOCALS (281) 15 17
BEGIN_BODY (282) 13 15
END_BODY (283) 18 22 23
ARRAY (284) 26 31
OF (285) 26 31
IF (286) 35 47
THEN (287) 35
ENDIF (288) 58
ELSE (289) 57
WHILE (290) 36 48 49 50 55 67 71
DO (291) 37 51
BEGINLOOP (292) 36 37 49 50
ENDLOOP (293) 50 62 65 67 70 71
BREAK (294) 42
READ (295) 38 40 52
WRITE (296) 39 41 53
AND (297) 84 85
OR (298) 80 81
NOT (299) 86
TRUE (300) 89
FALSE (301) 90
RETURN (302) 43 54
INTEGER (303) 25 26 30 31
IDENT (304) 4 5 6 7 24 25 26 27 29 30 31 32 113 117 118
NUMBER (305) 26 31 111


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
prog_start (52)
    on left: 1, on right: 0
functions (53)
    on left: 2 3, on right: 1 3
function (54)
    on left: 4 5 6 7 8, on right: 3
funcparams (55)
    on left: 9 10 11 12 13, on right: 4 6 7 8 9 11
funclocals (56)
    on left: 14 15 16 17, on right: 10 12 14 16
funcbody (57)
    on left: 18 19 20 21 22 23, on right: 13 15 17 19 21
declaration1 (58)
    on left: 24 25 26 27 28, on right: 9 11 24
declaration2 (59)
    on left: 29 30 31 32 33, on right: 14 16 29
statement (60)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
    52 53 54 55, on right: 18 19 20 21 23 49 56 57 59 61 63 64 65 66
    68
if (61)
    on left: 56 57 58 59 60, on right: 35 47 56 57 59
while (62)
    on left: 61 62 63 64 65, on right: 36 48 61 63
dowhile (63)
    on left: 66 67 68 69 70 71, on right: 37 51 66
rfunc (64)
    on left: 72 73 74, on right: 38 72
wfunc (65)
    on left: 75 76 77, on right: 39 75
boolexpr (66)
    on left: 78 79, on right: 35 36 47 48 49 50 67 91
boolexpr2 (67)
    on left: 80 81, on right: 55 79 80
relandexpr (68)
    on left: 82 83, on right: 78 79 80 81
relandexpr2 (69)
    on left: 84 85, on right: 83 84
relexpr (70)
    on left: 86 87, on right: 82 83 84 85
relexpr2 (71)
    on left: 88 89 90 91 92, on right: 86 87
comp (72)
    on left: 93 94 95 96 97 98 99, on right: 88
expression (73)
    on left: 100 101 102, on right: 34 43 44 45 46 88 92 101 102 112
    115 116 118
multexpr (74)
    on left: 103 104 105 106, on right: 100 101 102 104 105 106
term (75)
    on left: 107 108 109, on right: 103 104 105 106
term1 (76)
    on left: 110 111 112, on right: 107 108
term2 (77)
    on left: 113, on right: 109
term3 (78)
    on left: 114 115 116, on right: 113 116
var (79)
    on left: 117 118, on right: 34 40 41 44 45 46 72 73 74 75 76 77
    110


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS funcparams
    5         | FUNCTION . IDENT SEMICOLON BEGIN_PARAMS error
    6         | FUNCTION . IDENT SEMICOLON error funcparams
    7         | FUNCTION . IDENT error BEGIN_PARAMS funcparams
    8         | FUNCTION . error SEMICOLON BEGIN_PARAMS funcparams

    error  shift, and go to state 5
    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

    8 function: FUNCTION error . SEMICOLON BEGIN_PARAMS funcparams

    SEMICOLON  shift, and go to state 9


State 6

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS funcparams
    5         | FUNCTION IDENT . SEMICOLON BEGIN_PARAMS error
    6         | FUNCTION IDENT . SEMICOLON error funcparams
    7         | FUNCTION IDENT . error BEGIN_PARAMS funcparams

    error      shift, and go to state 10
    SEMICOLON  shift, and go to state 11


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    8 function: FUNCTION error SEMICOLON . BEGIN_PARAMS funcparams

    BEGIN_PARAMS  shift, and go to state 12


State 10

    7 function: FUNCTION IDENT error . BEGIN_PARAMS funcparams

    BEGIN_PARAMS  shift, and go to state 13


State 11

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS funcparams
    5         | FUNCTION IDENT SEMICOLON . BEGIN_PARAMS error
    6         | FUNCTION IDENT SEMICOLON . error funcparams

    error         shift, and go to state 14
    BEGIN_PARAMS  shift, and go to state 15


State 12

    8 function: FUNCTION error SEMICOLON BEGIN_PARAMS . funcparams

    error       shift, and go to state 16
    END_PARAMS  shift, and go to state 17
    IDENT       shift, and go to state 18

    funcparams    go to state 19
    declaration1  go to state 20


State 13

    7 function: FUNCTION IDENT error BEGIN_PARAMS . funcparams

    error       shift, and go to state 16
    END_PARAMS  shift, and go to state 17
    IDENT       shift, and go to state 18

    funcparams    go to state 21
    declaration1  go to state 20


State 14

    6 function: FUNCTION IDENT SEMICOLON error . funcparams

    error       shift, and go to state 16
    END_PARAMS  shift, and go to state 17
    IDENT       shift, and go to state 18

    funcparams    go to state 22
    declaration1  go to state 20


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . funcparams
    5         | FUNCTION IDENT SEMICOLON BEGIN_PARAMS . error

    error       shift, and go to state 23
    END_PARAMS  shift, and go to state 17
    IDENT       shift, and go to state 18

    funcparams    go to state 24
    declaration1  go to state 20


State 16

   28 declaration1: error .

    $default  reduce using rule 28 (declaration1)


State 17

   10 funcparams: END_PARAMS . BEGIN_LOCALS funclocals
   12           | END_PARAMS . error funclocals
   13           | END_PARAMS . BEGIN_LOCALS error BEGIN_BODY funcbody

    error         shift, and go to state 25
    BEGIN_LOCALS  shift, and go to state 26


State 18

   24 declaration1: IDENT . COMMA declaration1
   25             | IDENT . COLON INTEGER
   26             | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   27             | IDENT . error

    error  shift, and go to state 27
    COLON  shift, and go to state 28
    COMMA  shift, and go to state 29


State 19

    8 function: FUNCTION error SEMICOLON BEGIN_PARAMS funcparams .

    $default  reduce using rule 8 (function)


State 20

    9 funcparams: declaration1 . SEMICOLON funcparams
   11           | declaration1 . error funcparams

    error      shift, and go to state 30
    SEMICOLON  shift, and go to state 31


State 21

    7 function: FUNCTION IDENT error BEGIN_PARAMS funcparams .

    $default  reduce using rule 7 (function)


State 22

    6 function: FUNCTION IDENT SEMICOLON error funcparams .

    $default  reduce using rule 6 (function)


State 23

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS error .
   28 declaration1: error .

    error      reduce using rule 28 (declaration1)
    SEMICOLON  reduce using rule 28 (declaration1)
    $default   reduce using rule 5 (function)


State 24

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams .

    $default  reduce using rule 4 (function)


State 25

   12 funcparams: END_PARAMS error . funclocals

    error       shift, and go to state 32
    END_LOCALS  shift, and go to state 33
    IDENT       shift, and go to state 34

    funclocals    go to state 35
    declaration2  go to state 36


State 26

   10 funcparams: END_PARAMS BEGIN_LOCALS . funclocals
   13           | END_PARAMS BEGIN_LOCALS . error BEGIN_BODY funcbody

    error       shift, and go to state 37
    END_LOCALS  shift, and go to state 33
    IDENT       shift, and go to state 34

    funclocals    go to state 38
    declaration2  go to state 36


State 27

   27 declaration1: IDENT error .

    $default  reduce using rule 27 (declaration1)


State 28

   25 declaration1: IDENT COLON . INTEGER
   26             | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    ARRAY    shift, and go to state 39
    INTEGER  shift, and go to state 40


State 29

   24 declaration1: IDENT COMMA . declaration1

    error  shift, and go to state 16
    IDENT  shift, and go to state 18

    declaration1  go to state 41


State 30

   11 funcparams: declaration1 error . funcparams

    error       shift, and go to state 16
    END_PARAMS  shift, and go to state 17
    IDENT       shift, and go to state 18

    funcparams    go to state 42
    declaration1  go to state 20


State 31

    9 funcparams: declaration1 SEMICOLON . funcparams

    error       shift, and go to state 16
    END_PARAMS  shift, and go to state 17
    IDENT       shift, and go to state 18

    funcparams    go to state 43
    declaration1  go to state 20


State 32

   33 declaration2: error .

    $default  reduce using rule 33 (declaration2)


State 33

   15 funclocals: END_LOCALS . BEGIN_BODY funcbody
   17           | END_LOCALS . error funcbody

    error       shift, and go to state 44
    BEGIN_BODY  shift, and go to state 45


State 34

   29 declaration2: IDENT . COMMA declaration2
   30             | IDENT . COLON INTEGER
   31             | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   32             | IDENT . error

    error  shift, and go to state 46
    COLON  shift, and go to state 47
    COMMA  shift, and go to state 48


State 35

   12 funcparams: END_PARAMS error funclocals .

    $default  reduce using rule 12 (funcparams)


State 36

   14 funclocals: declaration2 . SEMICOLON funclocals
   16           | declaration2 . error funclocals

    error      shift, and go to state 49
    SEMICOLON  shift, and go to state 50


State 37

   13 funcparams: END_PARAMS BEGIN_LOCALS error . BEGIN_BODY funcbody
   33 declaration2: error .

    BEGIN_BODY  shift, and go to state 51

    $default  reduce using rule 33 (declaration2)


State 38

   10 funcparams: END_PARAMS BEGIN_LOCALS funclocals .

    $default  reduce using rule 10 (funcparams)


State 39

   26 declaration1: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 52


State 40

   25 declaration1: IDENT COLON INTEGER .

    $default  reduce using rule 25 (declaration1)


State 41

   24 declaration1: IDENT COMMA declaration1 .

    $default  reduce using rule 24 (declaration1)


State 42

   11 funcparams: declaration1 error funcparams .

    $default  reduce using rule 11 (funcparams)


State 43

    9 funcparams: declaration1 SEMICOLON funcparams .

    $default  reduce using rule 9 (funcparams)


State 44

   17 funclocals: END_LOCALS error . funcbody

    error   shift, and go to state 53
    IF      shift, and go to state 54
    WHILE   shift, and go to state 55
    DO      shift, and go to state 56
    BREAK   shift, and go to state 57
    READ    shift, and go to state 58
    WRITE   shift, and go to state 59
    RETURN  shift, and go to state 60
    IDENT   shift, and go to state 61

    funcbody   go to state 62
    statement  go to state 63
    var        go to state 64


State 45

   15 funclocals: END_LOCALS BEGIN_BODY . funcbody

    error   shift, and go to state 53
    IF      shift, and go to state 54
    WHILE   shift, and go to state 55
    DO      shift, and go to state 56
    BREAK   shift, and go to state 57
    READ    shift, and go to state 58
    WRITE   shift, and go to state 59
    RETURN  shift, and go to state 60
    IDENT   shift, and go to state 61

    funcbody   go to state 65
    statement  go to state 63
    var        go to state 64


State 46

   32 declaration2: IDENT error .

    $default  reduce using rule 32 (declaration2)


State 47

   30 declaration2: IDENT COLON . INTEGER
   31             | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    ARRAY    shift, and go to state 66
    INTEGER  shift, and go to state 67


State 48

   29 declaration2: IDENT COMMA . declaration2

    error  shift, and go to state 32
    IDENT  shift, and go to state 34

    declaration2  go to state 68


State 49

   16 funclocals: declaration2 error . funclocals

    error       shift, and go to state 32
    END_LOCALS  shift, and go to state 33
    IDENT       shift, and go to state 34

    funclocals    go to state 69
    declaration2  go to state 36


State 50

   14 funclocals: declaration2 SEMICOLON . funclocals

    error       shift, and go to state 32
    END_LOCALS  shift, and go to state 33
    IDENT       shift, and go to state 34

    funclocals    go to state 70
    declaration2  go to state 36


State 51

   13 funcparams: END_PARAMS BEGIN_LOCALS error BEGIN_BODY . funcbody

    error   shift, and go to state 53
    IF      shift, and go to state 54
    WHILE   shift, and go to state 55
    DO      shift, and go to state 56
    BREAK   shift, and go to state 57
    READ    shift, and go to state 58
    WRITE   shift, and go to state 59
    RETURN  shift, and go to state 60
    IDENT   shift, and go to state 61

    funcbody   go to state 71
    statement  go to state 63
    var        go to state 64


State 52

   26 declaration1: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 72


State 53

   22 funcbody: error . SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 73


State 54

   35 statement: IF . boolexpr THEN if
   47          | IF . boolexpr error if

    L_PAREN  shift, and go to state 74
    SUB      shift, and go to state 75
    NOT      shift, and go to state 76
    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    boolexpr    go to state 81
    relandexpr  go to state 82
    relexpr     go to state 83
    relexpr2    go to state 84
    expression  go to state 85
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 55

   36 statement: WHILE . boolexpr BEGINLOOP while
   48          | WHILE . boolexpr error while
   49          | WHILE . boolexpr BEGINLOOP error statement
   50          | WHILE . boolexpr BEGINLOOP error ENDLOOP
   55          | WHILE . error boolexpr2

    error    shift, and go to state 91
    L_PAREN  shift, and go to state 74
    SUB      shift, and go to state 75
    NOT      shift, and go to state 76
    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    boolexpr    go to state 92
    relandexpr  go to state 82
    relexpr     go to state 83
    relexpr2    go to state 84
    expression  go to state 85
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 56

   37 statement: DO . BEGINLOOP dowhile
   51          | DO . error dowhile

    error      shift, and go to state 93
    BEGINLOOP  shift, and go to state 94


State 57

   42 statement: BREAK .

    $default  reduce using rule 42 (statement)


State 58

   38 statement: READ . rfunc
   40          | READ . var
   52          | READ . error

    error  shift, and go to state 95
    IDENT  shift, and go to state 61

    rfunc  go to state 96
    var    go to state 97


State 59

   39 statement: WRITE . wfunc
   41          | WRITE . var
   53          | WRITE . error

    error  shift, and go to state 98
    IDENT  shift, and go to state 61

    wfunc  go to state 99
    var    go to state 100


State 60

   43 statement: RETURN . expression
   54          | RETURN . error

    error    shift, and go to state 101
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    expression  go to state 103
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 61

  117 var: IDENT .
  118    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 104

    $default  reduce using rule 117 (var)


State 62

   17 funclocals: END_LOCALS error funcbody .

    $default  reduce using rule 17 (funclocals)


State 63

   18 funcbody: statement . SEMICOLON END_BODY
   19         | statement . SEMICOLON funcbody
   20         | statement . SEMICOLON error
   21         | statement . error funcbody
   23         | statement . error END_BODY

    error      shift, and go to state 105
    SEMICOLON  shift, and go to state 106


State 64

   34 statement: var . ASSIGN expression
   44          | var . error expression
   45          | var . ASSIGN error ADD expression
   46          | var . ASSIGN error SUB expression

    error   shift, and go to state 107
    ASSIGN  shift, and go to state 108


State 65

   15 funclocals: END_LOCALS BEGIN_BODY funcbody .

    $default  reduce using rule 15 (funclocals)


State 66

   31 declaration2: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 109


State 67

   30 declaration2: IDENT COLON INTEGER .

    $default  reduce using rule 30 (declaration2)


State 68

   29 declaration2: IDENT COMMA declaration2 .

    $default  reduce using rule 29 (declaration2)


State 69

   16 funclocals: declaration2 error funclocals .

    $default  reduce using rule 16 (funclocals)


State 70

   14 funclocals: declaration2 SEMICOLON funclocals .

    $default  reduce using rule 14 (funclocals)


State 71

   13 funcparams: END_PARAMS BEGIN_LOCALS error BEGIN_BODY funcbody .

    $default  reduce using rule 13 (funcparams)


State 72

   26 declaration1: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 110


State 73

   22 funcbody: error SEMICOLON . END_BODY

    END_BODY  shift, and go to state 111


State 74

   91 relexpr2: L_PAREN . boolexpr R_PAREN
  112 term1: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 74
    SUB      shift, and go to state 75
    NOT      shift, and go to state 76
    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    boolexpr    go to state 112
    relandexpr  go to state 82
    relexpr     go to state 83
    relexpr2    go to state 84
    expression  go to state 113
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 75

  108 term: SUB . term1

    L_PAREN  shift, and go to state 102
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 80

    term1  go to state 114
    var    go to state 90


State 76

   86 relexpr: NOT . relexpr2

    L_PAREN  shift, and go to state 74
    SUB      shift, and go to state 75
    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    relexpr2    go to state 115
    expression  go to state 85
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 77

   89 relexpr2: TRUE .

    $default  reduce using rule 89 (relexpr2)


State 78

   90 relexpr2: FALSE .

    $default  reduce using rule 90 (relexpr2)


State 79

  113 term2: IDENT . L_PAREN term3 R_PAREN
  117 var: IDENT .
  118    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 116
    L_SQUARE_BRACKET  shift, and go to state 104

    $default  reduce using rule 117 (var)


State 80

  111 term1: NUMBER .

    $default  reduce using rule 111 (term1)


State 81

   35 statement: IF boolexpr . THEN if
   47          | IF boolexpr . error if

    error  shift, and go to state 117
    THEN   shift, and go to state 118


State 82

   78 boolexpr: relandexpr .
   79         | relandexpr . boolexpr2

    OR  shift, and go to state 119

    $default  reduce using rule 78 (boolexpr)

    boolexpr2  go to state 120


State 83

   82 relandexpr: relexpr .
   83           | relexpr . relandexpr2

    AND  shift, and go to state 121

    $default  reduce using rule 82 (relandexpr)

    relandexpr2  go to state 122


State 84

   87 relexpr: relexpr2 .

    $default  reduce using rule 87 (relexpr)


State 85

   88 relexpr2: expression . comp expression
   92         | expression . error

    error  shift, and go to state 123
    EQ     shift, and go to state 124
    NEQ    shift, and go to state 125
    LT     shift, and go to state 126
    GT     shift, and go to state 127
    LTE    shift, and go to state 128
    GTE    shift, and go to state 129

    comp  go to state 130


State 86

  100 expression: multexpr .
  101           | multexpr . ADD expression
  102           | multexpr . SUB expression

    SUB  shift, and go to state 131
    ADD  shift, and go to state 132

    $default  reduce using rule 100 (expression)


State 87

  103 multexpr: term .
  104         | term . MULT multexpr
  105         | term . DIV multexpr
  106         | term . MOD multexpr

    MULT  shift, and go to state 133
    DIV   shift, and go to state 134
    MOD   shift, and go to state 135

    $default  reduce using rule 103 (multexpr)


State 88

  107 term: term1 .

    $default  reduce using rule 107 (term)


State 89

  109 term: term2 .

    $default  reduce using rule 109 (term)


State 90

  110 term1: var .

    $default  reduce using rule 110 (term1)


State 91

   55 statement: WHILE error . boolexpr2

    OR  shift, and go to state 119

    boolexpr2  go to state 136


State 92

   36 statement: WHILE boolexpr . BEGINLOOP while
   48          | WHILE boolexpr . error while
   49          | WHILE boolexpr . BEGINLOOP error statement
   50          | WHILE boolexpr . BEGINLOOP error ENDLOOP

    error      shift, and go to state 137
    BEGINLOOP  shift, and go to state 138


State 93

   51 statement: DO error . dowhile

    error    shift, and go to state 139
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    DO       shift, and go to state 56
    ENDLOOP  shift, and go to state 140
    BREAK    shift, and go to state 57
    READ     shift, and go to state 58
    WRITE    shift, and go to state 59
    RETURN   shift, and go to state 60
    IDENT    shift, and go to state 61

    statement  go to state 141
    dowhile    go to state 142
    var        go to state 64


State 94

   37 statement: DO BEGINLOOP . dowhile

    error    shift, and go to state 139
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    DO       shift, and go to state 56
    ENDLOOP  shift, and go to state 140
    BREAK    shift, and go to state 57
    READ     shift, and go to state 58
    WRITE    shift, and go to state 59
    RETURN   shift, and go to state 60
    IDENT    shift, and go to state 61

    statement  go to state 141
    dowhile    go to state 143
    var        go to state 64


State 95

   52 statement: READ error .

    $default  reduce using rule 52 (statement)


State 96

   38 statement: READ rfunc .

    $default  reduce using rule 38 (statement)


State 97

   40 statement: READ var .
   72 rfunc: var . COMMA rfunc
   73      | var . COMMA var
   74      | var . COMMA error

    COMMA  shift, and go to state 144

    $default  reduce using rule 40 (statement)


State 98

   53 statement: WRITE error .

    $default  reduce using rule 53 (statement)


State 99

   39 statement: WRITE wfunc .

    $default  reduce using rule 39 (statement)


State 100

   41 statement: WRITE var .
   75 wfunc: var . COMMA wfunc
   76      | var . COMMA var
   77      | var . COMMA error

    COMMA  shift, and go to state 145

    $default  reduce using rule 41 (statement)


State 101

   54 statement: RETURN error .

    $default  reduce using rule 54 (statement)


State 102

  112 term1: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    expression  go to state 146
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 103

   43 statement: RETURN expression .

    $default  reduce using rule 43 (statement)


State 104

  118 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    expression  go to state 147
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 105

   21 funcbody: statement error . funcbody
   23         | statement error . END_BODY

    error     shift, and go to state 53
    END_BODY  shift, and go to state 148
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    DO        shift, and go to state 56
    BREAK     shift, and go to state 57
    READ      shift, and go to state 58
    WRITE     shift, and go to state 59
    RETURN    shift, and go to state 60
    IDENT     shift, and go to state 61

    funcbody   go to state 149
    statement  go to state 63
    var        go to state 64


State 106

   18 funcbody: statement SEMICOLON . END_BODY
   19         | statement SEMICOLON . funcbody
   20         | statement SEMICOLON . error

    error     shift, and go to state 150
    END_BODY  shift, and go to state 151
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    DO        shift, and go to state 56
    BREAK     shift, and go to state 57
    READ      shift, and go to state 58
    WRITE     shift, and go to state 59
    RETURN    shift, and go to state 60
    IDENT     shift, and go to state 61

    funcbody   go to state 152
    statement  go to state 63
    var        go to state 64


State 107

   44 statement: var error . expression

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    expression  go to state 153
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 108

   34 statement: var ASSIGN . expression
   45          | var ASSIGN . error ADD expression
   46          | var ASSIGN . error SUB expression

    error    shift, and go to state 154
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    expression  go to state 155
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 109

   31 declaration2: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 156


State 110

   26 declaration1: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 157


State 111

   22 funcbody: error SEMICOLON END_BODY .

    $default  reduce using rule 22 (funcbody)


State 112

   91 relexpr2: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 158


State 113

   88 relexpr2: expression . comp expression
   92         | expression . error
  112 term1: L_PAREN expression . R_PAREN

    error    shift, and go to state 123
    R_PAREN  shift, and go to state 159
    EQ       shift, and go to state 124
    NEQ      shift, and go to state 125
    LT       shift, and go to state 126
    GT       shift, and go to state 127
    LTE      shift, and go to state 128
    GTE      shift, and go to state 129

    comp  go to state 130


State 114

  108 term: SUB term1 .

    $default  reduce using rule 108 (term)


State 115

   86 relexpr: NOT relexpr2 .

    $default  reduce using rule 86 (relexpr)


State 116

  113 term2: IDENT L_PAREN . term3 R_PAREN

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    $default  reduce using rule 114 (term3)

    expression  go to state 160
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    term3       go to state 161
    var         go to state 90


State 117

   47 statement: IF boolexpr error . if

    error   shift, and go to state 162
    IF      shift, and go to state 54
    ENDIF   shift, and go to state 163
    ELSE    shift, and go to state 164
    WHILE   shift, and go to state 55
    DO      shift, and go to state 56
    BREAK   shift, and go to state 57
    READ    shift, and go to state 58
    WRITE   shift, and go to state 59
    RETURN  shift, and go to state 60
    IDENT   shift, and go to state 61

    statement  go to state 165
    if         go to state 166
    var        go to state 64


State 118

   35 statement: IF boolexpr THEN . if

    error   shift, and go to state 162
    IF      shift, and go to state 54
    ENDIF   shift, and go to state 163
    ELSE    shift, and go to state 164
    WHILE   shift, and go to state 55
    DO      shift, and go to state 56
    BREAK   shift, and go to state 57
    READ    shift, and go to state 58
    WRITE   shift, and go to state 59
    RETURN  shift, and go to state 60
    IDENT   shift, and go to state 61

    statement  go to state 165
    if         go to state 167
    var        go to state 64


State 119

   80 boolexpr2: OR . relandexpr boolexpr2
   81          | OR . relandexpr

    L_PAREN  shift, and go to state 74
    SUB      shift, and go to state 75
    NOT      shift, and go to state 76
    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    relandexpr  go to state 168
    relexpr     go to state 83
    relexpr2    go to state 84
    expression  go to state 85
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 120

   79 boolexpr: relandexpr boolexpr2 .

    $default  reduce using rule 79 (boolexpr)


State 121

   84 relandexpr2: AND . relexpr relandexpr2
   85            | AND . relexpr

    L_PAREN  shift, and go to state 74
    SUB      shift, and go to state 75
    NOT      shift, and go to state 76
    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    relexpr     go to state 169
    relexpr2    go to state 84
    expression  go to state 85
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 122

   83 relandexpr: relexpr relandexpr2 .

    $default  reduce using rule 83 (relandexpr)


State 123

   92 relexpr2: expression error .
   99 comp: error .

    L_PAREN   reduce using rule 99 (comp)
    SUB       reduce using rule 99 (comp)
    IDENT     reduce using rule 99 (comp)
    NUMBER    reduce using rule 99 (comp)
    $default  reduce using rule 92 (relexpr2)


State 124

   93 comp: EQ .

    $default  reduce using rule 93 (comp)


State 125

   94 comp: NEQ .

    $default  reduce using rule 94 (comp)


State 126

   95 comp: LT .

    $default  reduce using rule 95 (comp)


State 127

   96 comp: GT .

    $default  reduce using rule 96 (comp)


State 128

   97 comp: LTE .

    $default  reduce using rule 97 (comp)


State 129

   98 comp: GTE .

    $default  reduce using rule 98 (comp)


State 130

   88 relexpr2: expression comp . expression

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    expression  go to state 170
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 131

  102 expression: multexpr SUB . expression

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    expression  go to state 171
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 132

  101 expression: multexpr ADD . expression

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    expression  go to state 172
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 133

  104 multexpr: term MULT . multexpr

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    multexpr  go to state 173
    term      go to state 87
    term1     go to state 88
    term2     go to state 89
    var       go to state 90


State 134

  105 multexpr: term DIV . multexpr

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    multexpr  go to state 174
    term      go to state 87
    term1     go to state 88
    term2     go to state 89
    var       go to state 90


State 135

  106 multexpr: term MOD . multexpr

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    multexpr  go to state 175
    term      go to state 87
    term1     go to state 88
    term2     go to state 89
    var       go to state 90


State 136

   55 statement: WHILE error boolexpr2 .

    $default  reduce using rule 55 (statement)


State 137

   48 statement: WHILE boolexpr error . while

    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    DO       shift, and go to state 56
    ENDLOOP  shift, and go to state 176
    BREAK    shift, and go to state 57
    READ     shift, and go to state 58
    WRITE    shift, and go to state 59
    RETURN   shift, and go to state 60
    IDENT    shift, and go to state 61

    statement  go to state 177
    while      go to state 178
    var        go to state 64


State 138

   36 statement: WHILE boolexpr BEGINLOOP . while
   49          | WHILE boolexpr BEGINLOOP . error statement
   50          | WHILE boolexpr BEGINLOOP . error ENDLOOP

    error    shift, and go to state 179
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    DO       shift, and go to state 56
    ENDLOOP  shift, and go to state 176
    BREAK    shift, and go to state 57
    READ     shift, and go to state 58
    WRITE    shift, and go to state 59
    RETURN   shift, and go to state 60
    IDENT    shift, and go to state 61

    statement  go to state 177
    while      go to state 180
    var        go to state 64


State 139

   69 dowhile: error .

    $default  reduce using rule 69 (dowhile)


State 140

   67 dowhile: ENDLOOP . WHILE boolexpr
   70        | ENDLOOP . error
   71        | ENDLOOP . WHILE error

    error  shift, and go to state 181
    WHILE  shift, and go to state 182


State 141

   66 dowhile: statement . SEMICOLON dowhile
   68        | statement . error

    error      shift, and go to state 183
    SEMICOLON  shift, and go to state 184


State 142

   51 statement: DO error dowhile .

    $default  reduce using rule 51 (statement)


State 143

   37 statement: DO BEGINLOOP dowhile .

    $default  reduce using rule 37 (statement)


State 144

   72 rfunc: var COMMA . rfunc
   73      | var COMMA . var
   74      | var COMMA . error

    error  shift, and go to state 185
    IDENT  shift, and go to state 61

    rfunc  go to state 186
    var    go to state 187


State 145

   75 wfunc: var COMMA . wfunc
   76      | var COMMA . var
   77      | var COMMA . error

    error  shift, and go to state 188
    IDENT  shift, and go to state 61

    wfunc  go to state 189
    var    go to state 190


State 146

  112 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 159


State 147

  118 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 191


State 148

   23 funcbody: statement error END_BODY .

    $default  reduce using rule 23 (funcbody)


State 149

   21 funcbody: statement error funcbody .

    $default  reduce using rule 21 (funcbody)


State 150

   20 funcbody: statement SEMICOLON error .
   22         | error . SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 73

    $default  reduce using rule 20 (funcbody)


State 151

   18 funcbody: statement SEMICOLON END_BODY .

    $default  reduce using rule 18 (funcbody)


State 152

   19 funcbody: statement SEMICOLON funcbody .

    $default  reduce using rule 19 (funcbody)


State 153

   44 statement: var error expression .

    $default  reduce using rule 44 (statement)


State 154

   45 statement: var ASSIGN error . ADD expression
   46          | var ASSIGN error . SUB expression

    SUB  shift, and go to state 192
    ADD  shift, and go to state 193


State 155

   34 statement: var ASSIGN expression .

    $default  reduce using rule 34 (statement)


State 156

   31 declaration2: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 194


State 157

   26 declaration1: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 195


State 158

   91 relexpr2: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 91 (relexpr2)


State 159

  112 term1: L_PAREN expression R_PAREN .

    $default  reduce using rule 112 (term1)


State 160

  115 term3: expression .
  116      | expression . COMMA term3

    COMMA  shift, and go to state 196

    $default  reduce using rule 115 (term3)


State 161

  113 term2: IDENT L_PAREN term3 . R_PAREN

    R_PAREN  shift, and go to state 197


State 162

   60 if: error .

    $default  reduce using rule 60 (if)


State 163

   58 if: ENDIF .

    $default  reduce using rule 58 (if)


State 164

   57 if: ELSE . statement SEMICOLON if

    IF      shift, and go to state 54
    WHILE   shift, and go to state 55
    DO      shift, and go to state 56
    BREAK   shift, and go to state 57
    READ    shift, and go to state 58
    WRITE   shift, and go to state 59
    RETURN  shift, and go to state 60
    IDENT   shift, and go to state 61

    statement  go to state 198
    var        go to state 64


State 165

   56 if: statement . SEMICOLON if
   59   | statement . error if

    error      shift, and go to state 199
    SEMICOLON  shift, and go to state 200


State 166

   47 statement: IF boolexpr error if .

    $default  reduce using rule 47 (statement)


State 167

   35 statement: IF boolexpr THEN if .

    $default  reduce using rule 35 (statement)


State 168

   80 boolexpr2: OR relandexpr . boolexpr2
   81          | OR relandexpr .

    OR  shift, and go to state 119

    $default  reduce using rule 81 (boolexpr2)

    boolexpr2  go to state 201


State 169

   84 relandexpr2: AND relexpr . relandexpr2
   85            | AND relexpr .

    AND  shift, and go to state 121

    $default  reduce using rule 85 (relandexpr2)

    relandexpr2  go to state 202


State 170

   88 relexpr2: expression comp expression .

    $default  reduce using rule 88 (relexpr2)


State 171

  102 expression: multexpr SUB expression .

    $default  reduce using rule 102 (expression)


State 172

  101 expression: multexpr ADD expression .

    $default  reduce using rule 101 (expression)


State 173

  104 multexpr: term MULT multexpr .

    $default  reduce using rule 104 (multexpr)


State 174

  105 multexpr: term DIV multexpr .

    $default  reduce using rule 105 (multexpr)


State 175

  106 multexpr: term MOD multexpr .

    $default  reduce using rule 106 (multexpr)


State 176

   62 while: ENDLOOP .

    $default  reduce using rule 62 (while)


State 177

   61 while: statement . SEMICOLON while
   63      | statement . error while
   64      | statement . SEMICOLON error statement
   65      | statement . SEMICOLON error ENDLOOP

    error      shift, and go to state 203
    SEMICOLON  shift, and go to state 204


State 178

   48 statement: WHILE boolexpr error while .

    $default  reduce using rule 48 (statement)


State 179

   49 statement: WHILE boolexpr BEGINLOOP error . statement
   50          | WHILE boolexpr BEGINLOOP error . ENDLOOP

    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    DO       shift, and go to state 56
    ENDLOOP  shift, and go to state 205
    BREAK    shift, and go to state 57
    READ     shift, and go to state 58
    WRITE    shift, and go to state 59
    RETURN   shift, and go to state 60
    IDENT    shift, and go to state 61

    statement  go to state 206
    var        go to state 64


State 180

   36 statement: WHILE boolexpr BEGINLOOP while .

    $default  reduce using rule 36 (statement)


State 181

   70 dowhile: ENDLOOP error .

    $default  reduce using rule 70 (dowhile)


State 182

   67 dowhile: ENDLOOP WHILE . boolexpr
   71        | ENDLOOP WHILE . error

    error    shift, and go to state 207
    L_PAREN  shift, and go to state 74
    SUB      shift, and go to state 75
    NOT      shift, and go to state 76
    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    boolexpr    go to state 208
    relandexpr  go to state 82
    relexpr     go to state 83
    relexpr2    go to state 84
    expression  go to state 85
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 183

   68 dowhile: statement error .

    $default  reduce using rule 68 (dowhile)


State 184

   66 dowhile: statement SEMICOLON . dowhile

    error    shift, and go to state 139
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    DO       shift, and go to state 56
    ENDLOOP  shift, and go to state 140
    BREAK    shift, and go to state 57
    READ     shift, and go to state 58
    WRITE    shift, and go to state 59
    RETURN   shift, and go to state 60
    IDENT    shift, and go to state 61

    statement  go to state 141
    dowhile    go to state 209
    var        go to state 64


State 185

   74 rfunc: var COMMA error .

    $default  reduce using rule 74 (rfunc)


State 186

   72 rfunc: var COMMA rfunc .

    $default  reduce using rule 72 (rfunc)


State 187

   72 rfunc: var . COMMA rfunc
   73      | var . COMMA var
   73      | var COMMA var .
   74      | var . COMMA error

    COMMA  shift, and go to state 144

    $default  reduce using rule 73 (rfunc)


State 188

   77 wfunc: var COMMA error .

    $default  reduce using rule 77 (wfunc)


State 189

   75 wfunc: var COMMA wfunc .

    $default  reduce using rule 75 (wfunc)


State 190

   75 wfunc: var . COMMA wfunc
   76      | var . COMMA var
   76      | var COMMA var .
   77      | var . COMMA error

    COMMA  shift, and go to state 145

    $default  reduce using rule 76 (wfunc)


State 191

  118 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 118 (var)


State 192

   46 statement: var ASSIGN error SUB . expression

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    expression  go to state 210
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 193

   45 statement: var ASSIGN error ADD . expression

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    expression  go to state 211
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    var         go to state 90


State 194

   31 declaration2: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 212


State 195

   26 declaration1: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 26 (declaration1)


State 196

  116 term3: expression COMMA . term3

    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 75
    IDENT    shift, and go to state 79
    NUMBER   shift, and go to state 80

    $default  reduce using rule 114 (term3)

    expression  go to state 160
    multexpr    go to state 86
    term        go to state 87
    term1       go to state 88
    term2       go to state 89
    term3       go to state 213
    var         go to state 90


State 197

  113 term2: IDENT L_PAREN term3 R_PAREN .

    $default  reduce using rule 113 (term2)


State 198

   57 if: ELSE statement . SEMICOLON if

    SEMICOLON  shift, and go to state 214


State 199

   59 if: statement error . if

    error   shift, and go to state 162
    IF      shift, and go to state 54
    ENDIF   shift, and go to state 163
    ELSE    shift, and go to state 164
    WHILE   shift, and go to state 55
    DO      shift, and go to state 56
    BREAK   shift, and go to state 57
    READ    shift, and go to state 58
    WRITE   shift, and go to state 59
    RETURN  shift, and go to state 60
    IDENT   shift, and go to state 61

    statement  go to state 165
    if         go to state 215
    var        go to state 64


State 200

   56 if: statement SEMICOLON . if

    error   shift, and go to state 162
    IF      shift, and go to state 54
    ENDIF   shift, and go to state 163
    ELSE    shift, and go to state 164
    WHILE   shift, and go to state 55
    DO      shift, and go to state 56
    BREAK   shift, and go to state 57
    READ    shift, and go to state 58
    WRITE   shift, and go to state 59
    RETURN  shift, and go to state 60
    IDENT   shift, and go to state 61

    statement  go to state 165
    if         go to state 216
    var        go to state 64


State 201

   80 boolexpr2: OR relandexpr boolexpr2 .

    $default  reduce using rule 80 (boolexpr2)


State 202

   84 relandexpr2: AND relexpr relandexpr2 .

    $default  reduce using rule 84 (relandexpr2)


State 203

   63 while: statement error . while

    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    DO       shift, and go to state 56
    ENDLOOP  shift, and go to state 176
    BREAK    shift, and go to state 57
    READ     shift, and go to state 58
    WRITE    shift, and go to state 59
    RETURN   shift, and go to state 60
    IDENT    shift, and go to state 61

    statement  go to state 177
    while      go to state 217
    var        go to state 64


State 204

   61 while: statement SEMICOLON . while
   64      | statement SEMICOLON . error statement
   65      | statement SEMICOLON . error ENDLOOP

    error    shift, and go to state 218
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    DO       shift, and go to state 56
    ENDLOOP  shift, and go to state 176
    BREAK    shift, and go to state 57
    READ     shift, and go to state 58
    WRITE    shift, and go to state 59
    RETURN   shift, and go to state 60
    IDENT    shift, and go to state 61

    statement  go to state 177
    while      go to state 219
    var        go to state 64


State 205

   50 statement: WHILE boolexpr BEGINLOOP error ENDLOOP .

    $default  reduce using rule 50 (statement)


State 206

   49 statement: WHILE boolexpr BEGINLOOP error statement .

    $default  reduce using rule 49 (statement)


State 207

   71 dowhile: ENDLOOP WHILE error .

    $default  reduce using rule 71 (dowhile)


State 208

   67 dowhile: ENDLOOP WHILE boolexpr .

    $default  reduce using rule 67 (dowhile)


State 209

   66 dowhile: statement SEMICOLON dowhile .

    $default  reduce using rule 66 (dowhile)


State 210

   46 statement: var ASSIGN error SUB expression .

    $default  reduce using rule 46 (statement)


State 211

   45 statement: var ASSIGN error ADD expression .

    $default  reduce using rule 45 (statement)


State 212

   31 declaration2: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 220


State 213

  116 term3: expression COMMA term3 .

    $default  reduce using rule 116 (term3)


State 214

   57 if: ELSE statement SEMICOLON . if

    error   shift, and go to state 162
    IF      shift, and go to state 54
    ENDIF   shift, and go to state 163
    ELSE    shift, and go to state 164
    WHILE   shift, and go to state 55
    DO      shift, and go to state 56
    BREAK   shift, and go to state 57
    READ    shift, and go to state 58
    WRITE   shift, and go to state 59
    RETURN  shift, and go to state 60
    IDENT   shift, and go to state 61

    statement  go to state 165
    if         go to state 221
    var        go to state 64


State 215

   59 if: statement error if .

    $default  reduce using rule 59 (if)


State 216

   56 if: statement SEMICOLON if .

    $default  reduce using rule 56 (if)


State 217

   63 while: statement error while .

    $default  reduce using rule 63 (while)


State 218

   64 while: statement SEMICOLON error . statement
   65      | statement SEMICOLON error . ENDLOOP

    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    DO       shift, and go to state 56
    ENDLOOP  shift, and go to state 222
    BREAK    shift, and go to state 57
    READ     shift, and go to state 58
    WRITE    shift, and go to state 59
    RETURN   shift, and go to state 60
    IDENT    shift, and go to state 61

    statement  go to state 223
    var        go to state 64


State 219

   61 while: statement SEMICOLON while .

    $default  reduce using rule 61 (while)


State 220

   31 declaration2: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 31 (declaration2)


State 221

   57 if: ELSE statement SEMICOLON if .

    $default  reduce using rule 57 (if)


State 222

   65 while: statement SEMICOLON error ENDLOOP .

    $default  reduce using rule 65 (while)


State 223

   64 while: statement SEMICOLON error statement .

    $default  reduce using rule 64 (while)
