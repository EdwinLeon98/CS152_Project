Grammar

    0 $accept: program $end

    1 program: %empty
    2        | function program

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams

    4 funcparams: declaration SEMICOLON funcparams
    5           | END_PARAMS BEGIN_LOCALS funclocals
    6           | declaration error
    7           | END_PARAMS error

    8 funclocals: declaration SEMICOLON funclocals
    9           | END_LOCALS BEGIN_BODY funcbody
   10           | declaration error
   11           | END_LOCALS error

   12 funcbody: statement SEMICOLON END_BODY
   13         | statement SEMICOLON funcbody
   14         | statement error

   15 declaration: IDENT COMMA declaration
   16            | IDENT COLON array
   17            | error

   18 array: INTEGER
   19      | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   20 statement: var ASSIGN expression
   21          | IF boolexpr THEN if
   22          | WHILE boolexpr BEGINLOOP while
   23          | DO BEGINLOOP dowhile
   24          | READ rwfunc
   25          | WRITE rwfunc
   26          | READ var
   27          | WRITE var
   28          | BREAK
   29          | RETURN expression
   30          | var error
   31          | IF boolexpr error
   32          | WHILE boolexpr error
   33          | DO error

   34 if: statement SEMICOLON if
   35   | ELSE statement SEMICOLON if
   36   | ENDIF
   37   | statement error
   38   | error

   39 while: statement SEMICOLON while
   40      | ENDLOOP
   41      | statement error
   42      | error

   43 dowhile: statement SEMICOLON dowhile
   44        | ENDLOOP WHILE boolexpr
   45        | statement error
   46        | error
   47        | ENDLOOP error

   48 rwfunc: var COMMA rwfunc
   49       | var COMMA var
   50       | error

   51 boolexpr: relandexpr
   52         | relandexpr boolexpr2

   53 boolexpr2: OR relandexpr boolexpr2
   54          | OR relandexpr

   55 relandexpr: relexpr
   56           | relexpr relandexpr2

   57 relandexpr2: AND relexpr relandexpr2
   58            | AND relexpr

   59 relexpr: NOT relexpr2
   60        | relexpr2

   61 relexpr2: expression comp expression
   62         | TRUE
   63         | FALSE
   64         | L_PAREN boolexpr R_PAREN

   65 comp: EQ
   66     | NEQ
   67     | LT
   68     | GT
   69     | LTE
   70     | GTE
   71     | error

   72 expression: multexpr
   73           | multexpr ADD expression
   74           | multexpr SUB expression

   75 multexpr: term
   76         | term MULT multexpr
   77         | term DIV multexpr
   78         | term MOD multexpr

   79 term: term1
   80     | SUB term1
   81     | term2

   82 term1: var
   83      | NUMBER
   84      | L_PAREN expression R_PAREN

   85 term2: IDENT L_PAREN term3 R_PAREN

   86 term3: %empty
   87      | expression
   88      | expression COMMA term3

   89 var: IDENT
   90    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 6 7 10 11 14 17 30 31 32 33 37 38 41 42 45 46 47 50 71
SEMICOLON (258) 3 4 8 12 13 34 35 39 43
COLON (259) 16
COMMA (260) 15 48 49 88
L_PAREN (261) 64 84 85
R_PAREN (262) 64 84 85
L_SQUARE_BRACKET (263) 19 90
R_SQUARE_BRACKET (264) 19 90
ASSIGN (265) 20
EQ (266) 65
NEQ (267) 66
LT (268) 67
GT (269) 68
LTE (270) 69
GTE (271) 70
SUB (272) 74 80
ADD (273) 73
MULT (274) 76
DIV (275) 77
MOD (276) 78
FUNCTION (277) 3
BEGIN_PARAMS (278) 3
END_PARAMS (279) 5 7
BEGIN_LOCALS (280) 5
END_LOCALS (281) 9 11
BEGIN_BODY (282) 9
END_BODY (283) 12
ARRAY (284) 19
OF (285) 19
IF (286) 21 31
THEN (287) 21
ENDIF (288) 36
ELSE (289) 35
WHILE (290) 22 32 44
DO (291) 23 33
BEGINLOOP (292) 22 23
ENDLOOP (293) 40 44 47
BREAK (294) 28
READ (295) 24 26
WRITE (296) 25 27
AND (297) 57 58
OR (298) 53 54
NOT (299) 59
TRUE (300) 62
FALSE (301) 63
RETURN (302) 29
NUMBER (303) 19 83
INTEGER (304) 18 19
IDENT (305) 3 15 16 85 89 90


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 2
function (53)
    on left: 3, on right: 2
funcparams (54)
    on left: 4 5 6 7, on right: 3 4
funclocals (55)
    on left: 8 9 10 11, on right: 5 8
funcbody (56)
    on left: 12 13 14, on right: 9 13
declaration (57)
    on left: 15 16 17, on right: 4 6 8 10 15
array (58)
    on left: 18 19, on right: 16
statement (59)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33, on right: 12
    13 14 34 35 37 39 41 43 45
if (60)
    on left: 34 35 36 37 38, on right: 21 34 35
while (61)
    on left: 39 40 41 42, on right: 22 39
dowhile (62)
    on left: 43 44 45 46 47, on right: 23 43
rwfunc (63)
    on left: 48 49 50, on right: 24 25 48
boolexpr (64)
    on left: 51 52, on right: 21 22 31 32 44 64
boolexpr2 (65)
    on left: 53 54, on right: 52 53
relandexpr (66)
    on left: 55 56, on right: 51 52 53 54
relandexpr2 (67)
    on left: 57 58, on right: 56 57
relexpr (68)
    on left: 59 60, on right: 55 56 57 58
relexpr2 (69)
    on left: 61 62 63 64, on right: 59 60
comp (70)
    on left: 65 66 67 68 69 70 71, on right: 61
expression (71)
    on left: 72 73 74, on right: 20 29 61 73 74 84 87 88 90
multexpr (72)
    on left: 75 76 77 78, on right: 72 73 74 76 77 78
term (73)
    on left: 79 80 81, on right: 75 76 77 78
term1 (74)
    on left: 82 83 84, on right: 79 80
term2 (75)
    on left: 85, on right: 81
term3 (76)
    on left: 86 87 88, on right: 85 88
var (77)
    on left: 89 90, on right: 20 26 27 30 48 49 82


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS funcparams

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    2 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 6
    function  go to state 3


State 4

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS funcparams

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 program: function program .

    $default  reduce using rule 2 (program)


State 7

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS funcparams

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . funcparams

    error       shift, and go to state 9
    END_PARAMS  shift, and go to state 10
    IDENT       shift, and go to state 11

    funcparams   go to state 12
    declaration  go to state 13


State 9

   17 declaration: error .

    $default  reduce using rule 17 (declaration)


State 10

    5 funcparams: END_PARAMS . BEGIN_LOCALS funclocals
    7           | END_PARAMS . error

    error         shift, and go to state 14
    BEGIN_LOCALS  shift, and go to state 15


State 11

   15 declaration: IDENT . COMMA declaration
   16            | IDENT . COLON array

    COLON  shift, and go to state 16
    COMMA  shift, and go to state 17


State 12

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams .

    $default  reduce using rule 3 (function)


State 13

    4 funcparams: declaration . SEMICOLON funcparams
    6           | declaration . error

    error      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 14

    7 funcparams: END_PARAMS error .

    $default  reduce using rule 7 (funcparams)


State 15

    5 funcparams: END_PARAMS BEGIN_LOCALS . funclocals

    error       shift, and go to state 9
    END_LOCALS  shift, and go to state 20
    IDENT       shift, and go to state 11

    funclocals   go to state 21
    declaration  go to state 22


State 16

   16 declaration: IDENT COLON . array

    ARRAY    shift, and go to state 23
    INTEGER  shift, and go to state 24

    array  go to state 25


State 17

   15 declaration: IDENT COMMA . declaration

    error  shift, and go to state 9
    IDENT  shift, and go to state 11

    declaration  go to state 26


State 18

    6 funcparams: declaration error .

    $default  reduce using rule 6 (funcparams)


State 19

    4 funcparams: declaration SEMICOLON . funcparams

    error       shift, and go to state 9
    END_PARAMS  shift, and go to state 10
    IDENT       shift, and go to state 11

    funcparams   go to state 27
    declaration  go to state 13


State 20

    9 funclocals: END_LOCALS . BEGIN_BODY funcbody
   11           | END_LOCALS . error

    error       shift, and go to state 28
    BEGIN_BODY  shift, and go to state 29


State 21

    5 funcparams: END_PARAMS BEGIN_LOCALS funclocals .

    $default  reduce using rule 5 (funcparams)


State 22

    8 funclocals: declaration . SEMICOLON funclocals
   10           | declaration . error

    error      shift, and go to state 30
    SEMICOLON  shift, and go to state 31


State 23

   19 array: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 32


State 24

   18 array: INTEGER .

    $default  reduce using rule 18 (array)


State 25

   16 declaration: IDENT COLON array .

    $default  reduce using rule 16 (declaration)


State 26

   15 declaration: IDENT COMMA declaration .

    $default  reduce using rule 15 (declaration)


State 27

    4 funcparams: declaration SEMICOLON funcparams .

    $default  reduce using rule 4 (funcparams)


State 28

   11 funclocals: END_LOCALS error .

    $default  reduce using rule 11 (funclocals)


State 29

    9 funclocals: END_LOCALS BEGIN_BODY . funcbody

    IF      shift, and go to state 33
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    RETURN  shift, and go to state 39
    IDENT   shift, and go to state 40

    funcbody   go to state 41
    statement  go to state 42
    var        go to state 43


State 30

   10 funclocals: declaration error .

    $default  reduce using rule 10 (funclocals)


State 31

    8 funclocals: declaration SEMICOLON . funclocals

    error       shift, and go to state 9
    END_LOCALS  shift, and go to state 20
    IDENT       shift, and go to state 11

    funclocals   go to state 44
    declaration  go to state 22


State 32

   19 array: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 45


State 33

   21 statement: IF . boolexpr THEN if
   31          | IF . boolexpr error

    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    boolexpr    go to state 53
    relandexpr  go to state 54
    relexpr     go to state 55
    relexpr2    go to state 56
    expression  go to state 57
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 34

   22 statement: WHILE . boolexpr BEGINLOOP while
   32          | WHILE . boolexpr error

    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    boolexpr    go to state 63
    relandexpr  go to state 54
    relexpr     go to state 55
    relexpr2    go to state 56
    expression  go to state 57
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 35

   23 statement: DO . BEGINLOOP dowhile
   33          | DO . error

    error      shift, and go to state 64
    BEGINLOOP  shift, and go to state 65


State 36

   28 statement: BREAK .

    $default  reduce using rule 28 (statement)


State 37

   24 statement: READ . rwfunc
   26          | READ . var

    error  shift, and go to state 66
    IDENT  shift, and go to state 40

    rwfunc  go to state 67
    var     go to state 68


State 38

   25 statement: WRITE . rwfunc
   27          | WRITE . var

    error  shift, and go to state 66
    IDENT  shift, and go to state 40

    rwfunc  go to state 69
    var     go to state 70


State 39

   29 statement: RETURN . expression

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression  go to state 72
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 40

   89 var: IDENT .
   90    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 73

    $default  reduce using rule 89 (var)


State 41

    9 funclocals: END_LOCALS BEGIN_BODY funcbody .

    $default  reduce using rule 9 (funclocals)


State 42

   12 funcbody: statement . SEMICOLON END_BODY
   13         | statement . SEMICOLON funcbody
   14         | statement . error

    error      shift, and go to state 74
    SEMICOLON  shift, and go to state 75


State 43

   20 statement: var . ASSIGN expression
   30          | var . error

    error   shift, and go to state 76
    ASSIGN  shift, and go to state 77


State 44

    8 funclocals: declaration SEMICOLON funclocals .

    $default  reduce using rule 8 (funclocals)


State 45

   19 array: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 78


State 46

   64 relexpr2: L_PAREN . boolexpr R_PAREN
   84 term1: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    boolexpr    go to state 79
    relandexpr  go to state 54
    relexpr     go to state 55
    relexpr2    go to state 56
    expression  go to state 80
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 47

   80 term: SUB . term1

    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 40

    term1  go to state 81
    var    go to state 62


State 48

   59 relexpr: NOT . relexpr2

    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    relexpr2    go to state 82
    expression  go to state 57
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 49

   62 relexpr2: TRUE .

    $default  reduce using rule 62 (relexpr2)


State 50

   63 relexpr2: FALSE .

    $default  reduce using rule 63 (relexpr2)


State 51

   83 term1: NUMBER .

    $default  reduce using rule 83 (term1)


State 52

   85 term2: IDENT . L_PAREN term3 R_PAREN
   89 var: IDENT .
   90    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 83
    L_SQUARE_BRACKET  shift, and go to state 73

    $default  reduce using rule 89 (var)


State 53

   21 statement: IF boolexpr . THEN if
   31          | IF boolexpr . error

    error  shift, and go to state 84
    THEN   shift, and go to state 85


State 54

   51 boolexpr: relandexpr .
   52         | relandexpr . boolexpr2

    OR  shift, and go to state 86

    $default  reduce using rule 51 (boolexpr)

    boolexpr2  go to state 87


State 55

   55 relandexpr: relexpr .
   56           | relexpr . relandexpr2

    AND  shift, and go to state 88

    $default  reduce using rule 55 (relandexpr)

    relandexpr2  go to state 89


State 56

   60 relexpr: relexpr2 .

    $default  reduce using rule 60 (relexpr)


State 57

   61 relexpr2: expression . comp expression

    error  shift, and go to state 90
    EQ     shift, and go to state 91
    NEQ    shift, and go to state 92
    LT     shift, and go to state 93
    GT     shift, and go to state 94
    LTE    shift, and go to state 95
    GTE    shift, and go to state 96

    comp  go to state 97


State 58

   72 expression: multexpr .
   73           | multexpr . ADD expression
   74           | multexpr . SUB expression

    SUB  shift, and go to state 98
    ADD  shift, and go to state 99

    $default  reduce using rule 72 (expression)


State 59

   75 multexpr: term .
   76         | term . MULT multexpr
   77         | term . DIV multexpr
   78         | term . MOD multexpr

    MULT  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 75 (multexpr)


State 60

   79 term: term1 .

    $default  reduce using rule 79 (term)


State 61

   81 term: term2 .

    $default  reduce using rule 81 (term)


State 62

   82 term1: var .

    $default  reduce using rule 82 (term1)


State 63

   22 statement: WHILE boolexpr . BEGINLOOP while
   32          | WHILE boolexpr . error

    error      shift, and go to state 103
    BEGINLOOP  shift, and go to state 104


State 64

   33 statement: DO error .

    $default  reduce using rule 33 (statement)


State 65

   23 statement: DO BEGINLOOP . dowhile

    error    shift, and go to state 105
    IF       shift, and go to state 33
    WHILE    shift, and go to state 34
    DO       shift, and go to state 35
    ENDLOOP  shift, and go to state 106
    BREAK    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38
    RETURN   shift, and go to state 39
    IDENT    shift, and go to state 40

    statement  go to state 107
    dowhile    go to state 108
    var        go to state 43


State 66

   50 rwfunc: error .

    $default  reduce using rule 50 (rwfunc)


State 67

   24 statement: READ rwfunc .

    $default  reduce using rule 24 (statement)


State 68

   26 statement: READ var .
   48 rwfunc: var . COMMA rwfunc
   49       | var . COMMA var

    COMMA  shift, and go to state 109

    $default  reduce using rule 26 (statement)


State 69

   25 statement: WRITE rwfunc .

    $default  reduce using rule 25 (statement)


State 70

   27 statement: WRITE var .
   48 rwfunc: var . COMMA rwfunc
   49       | var . COMMA var

    COMMA  shift, and go to state 109

    $default  reduce using rule 27 (statement)


State 71

   84 term1: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression  go to state 110
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 72

   29 statement: RETURN expression .

    $default  reduce using rule 29 (statement)


State 73

   90 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression  go to state 111
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 74

   14 funcbody: statement error .

    $default  reduce using rule 14 (funcbody)


State 75

   12 funcbody: statement SEMICOLON . END_BODY
   13         | statement SEMICOLON . funcbody

    END_BODY  shift, and go to state 112
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    BREAK     shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    funcbody   go to state 113
    statement  go to state 42
    var        go to state 43


State 76

   30 statement: var error .

    $default  reduce using rule 30 (statement)


State 77

   20 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression  go to state 114
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 78

   19 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 115


State 79

   64 relexpr2: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 116


State 80

   61 relexpr2: expression . comp expression
   84 term1: L_PAREN expression . R_PAREN

    error    shift, and go to state 90
    R_PAREN  shift, and go to state 117
    EQ       shift, and go to state 91
    NEQ      shift, and go to state 92
    LT       shift, and go to state 93
    GT       shift, and go to state 94
    LTE      shift, and go to state 95
    GTE      shift, and go to state 96

    comp  go to state 97


State 81

   80 term: SUB term1 .

    $default  reduce using rule 80 (term)


State 82

   59 relexpr: NOT relexpr2 .

    $default  reduce using rule 59 (relexpr)


State 83

   85 term2: IDENT L_PAREN . term3 R_PAREN

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    $default  reduce using rule 86 (term3)

    expression  go to state 118
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    term3       go to state 119
    var         go to state 62


State 84

   31 statement: IF boolexpr error .

    $default  reduce using rule 31 (statement)


State 85

   21 statement: IF boolexpr THEN . if

    error   shift, and go to state 120
    IF      shift, and go to state 33
    ENDIF   shift, and go to state 121
    ELSE    shift, and go to state 122
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    RETURN  shift, and go to state 39
    IDENT   shift, and go to state 40

    statement  go to state 123
    if         go to state 124
    var        go to state 43


State 86

   53 boolexpr2: OR . relandexpr boolexpr2
   54          | OR . relandexpr

    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    relandexpr  go to state 125
    relexpr     go to state 55
    relexpr2    go to state 56
    expression  go to state 57
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 87

   52 boolexpr: relandexpr boolexpr2 .

    $default  reduce using rule 52 (boolexpr)


State 88

   57 relandexpr2: AND . relexpr relandexpr2
   58            | AND . relexpr

    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    relexpr     go to state 126
    relexpr2    go to state 56
    expression  go to state 57
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 89

   56 relandexpr: relexpr relandexpr2 .

    $default  reduce using rule 56 (relandexpr)


State 90

   71 comp: error .

    $default  reduce using rule 71 (comp)


State 91

   65 comp: EQ .

    $default  reduce using rule 65 (comp)


State 92

   66 comp: NEQ .

    $default  reduce using rule 66 (comp)


State 93

   67 comp: LT .

    $default  reduce using rule 67 (comp)


State 94

   68 comp: GT .

    $default  reduce using rule 68 (comp)


State 95

   69 comp: LTE .

    $default  reduce using rule 69 (comp)


State 96

   70 comp: GTE .

    $default  reduce using rule 70 (comp)


State 97

   61 relexpr2: expression comp . expression

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression  go to state 127
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 98

   74 expression: multexpr SUB . expression

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression  go to state 128
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 99

   73 expression: multexpr ADD . expression

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression  go to state 129
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 100

   76 multexpr: term MULT . multexpr

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    multexpr  go to state 130
    term      go to state 59
    term1     go to state 60
    term2     go to state 61
    var       go to state 62


State 101

   77 multexpr: term DIV . multexpr

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    multexpr  go to state 131
    term      go to state 59
    term1     go to state 60
    term2     go to state 61
    var       go to state 62


State 102

   78 multexpr: term MOD . multexpr

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    multexpr  go to state 132
    term      go to state 59
    term1     go to state 60
    term2     go to state 61
    var       go to state 62


State 103

   32 statement: WHILE boolexpr error .

    $default  reduce using rule 32 (statement)


State 104

   22 statement: WHILE boolexpr BEGINLOOP . while

    error    shift, and go to state 133
    IF       shift, and go to state 33
    WHILE    shift, and go to state 34
    DO       shift, and go to state 35
    ENDLOOP  shift, and go to state 134
    BREAK    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38
    RETURN   shift, and go to state 39
    IDENT    shift, and go to state 40

    statement  go to state 135
    while      go to state 136
    var        go to state 43


State 105

   46 dowhile: error .

    $default  reduce using rule 46 (dowhile)


State 106

   44 dowhile: ENDLOOP . WHILE boolexpr
   47        | ENDLOOP . error

    error  shift, and go to state 137
    WHILE  shift, and go to state 138


State 107

   43 dowhile: statement . SEMICOLON dowhile
   45        | statement . error

    error      shift, and go to state 139
    SEMICOLON  shift, and go to state 140


State 108

   23 statement: DO BEGINLOOP dowhile .

    $default  reduce using rule 23 (statement)


State 109

   48 rwfunc: var COMMA . rwfunc
   49       | var COMMA . var

    error  shift, and go to state 66
    IDENT  shift, and go to state 40

    rwfunc  go to state 141
    var     go to state 142


State 110

   84 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 117


State 111

   90 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 143


State 112

   12 funcbody: statement SEMICOLON END_BODY .

    $default  reduce using rule 12 (funcbody)


State 113

   13 funcbody: statement SEMICOLON funcbody .

    $default  reduce using rule 13 (funcbody)


State 114

   20 statement: var ASSIGN expression .

    $default  reduce using rule 20 (statement)


State 115

   19 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 144


State 116

   64 relexpr2: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 64 (relexpr2)


State 117

   84 term1: L_PAREN expression R_PAREN .

    $default  reduce using rule 84 (term1)


State 118

   87 term3: expression .
   88      | expression . COMMA term3

    COMMA  shift, and go to state 145

    $default  reduce using rule 87 (term3)


State 119

   85 term2: IDENT L_PAREN term3 . R_PAREN

    R_PAREN  shift, and go to state 146


State 120

   38 if: error .

    $default  reduce using rule 38 (if)


State 121

   36 if: ENDIF .

    $default  reduce using rule 36 (if)


State 122

   35 if: ELSE . statement SEMICOLON if

    IF      shift, and go to state 33
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    RETURN  shift, and go to state 39
    IDENT   shift, and go to state 40

    statement  go to state 147
    var        go to state 43


State 123

   34 if: statement . SEMICOLON if
   37   | statement . error

    error      shift, and go to state 148
    SEMICOLON  shift, and go to state 149


State 124

   21 statement: IF boolexpr THEN if .

    $default  reduce using rule 21 (statement)


State 125

   53 boolexpr2: OR relandexpr . boolexpr2
   54          | OR relandexpr .

    OR  shift, and go to state 86

    $default  reduce using rule 54 (boolexpr2)

    boolexpr2  go to state 150


State 126

   57 relandexpr2: AND relexpr . relandexpr2
   58            | AND relexpr .

    AND  shift, and go to state 88

    $default  reduce using rule 58 (relandexpr2)

    relandexpr2  go to state 151


State 127

   61 relexpr2: expression comp expression .

    $default  reduce using rule 61 (relexpr2)


State 128

   74 expression: multexpr SUB expression .

    $default  reduce using rule 74 (expression)


State 129

   73 expression: multexpr ADD expression .

    $default  reduce using rule 73 (expression)


State 130

   76 multexpr: term MULT multexpr .

    $default  reduce using rule 76 (multexpr)


State 131

   77 multexpr: term DIV multexpr .

    $default  reduce using rule 77 (multexpr)


State 132

   78 multexpr: term MOD multexpr .

    $default  reduce using rule 78 (multexpr)


State 133

   42 while: error .

    $default  reduce using rule 42 (while)


State 134

   40 while: ENDLOOP .

    $default  reduce using rule 40 (while)


State 135

   39 while: statement . SEMICOLON while
   41      | statement . error

    error      shift, and go to state 152
    SEMICOLON  shift, and go to state 153


State 136

   22 statement: WHILE boolexpr BEGINLOOP while .

    $default  reduce using rule 22 (statement)


State 137

   47 dowhile: ENDLOOP error .

    $default  reduce using rule 47 (dowhile)


State 138

   44 dowhile: ENDLOOP WHILE . boolexpr

    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    boolexpr    go to state 154
    relandexpr  go to state 54
    relexpr     go to state 55
    relexpr2    go to state 56
    expression  go to state 57
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    var         go to state 62


State 139

   45 dowhile: statement error .

    $default  reduce using rule 45 (dowhile)


State 140

   43 dowhile: statement SEMICOLON . dowhile

    error    shift, and go to state 105
    IF       shift, and go to state 33
    WHILE    shift, and go to state 34
    DO       shift, and go to state 35
    ENDLOOP  shift, and go to state 106
    BREAK    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38
    RETURN   shift, and go to state 39
    IDENT    shift, and go to state 40

    statement  go to state 107
    dowhile    go to state 155
    var        go to state 43


State 141

   48 rwfunc: var COMMA rwfunc .

    $default  reduce using rule 48 (rwfunc)


State 142

   48 rwfunc: var . COMMA rwfunc
   49       | var . COMMA var
   49       | var COMMA var .

    COMMA  shift, and go to state 109

    $default  reduce using rule 49 (rwfunc)


State 143

   90 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 90 (var)


State 144

   19 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 19 (array)


State 145

   88 term3: expression COMMA . term3

    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    $default  reduce using rule 86 (term3)

    expression  go to state 118
    multexpr    go to state 58
    term        go to state 59
    term1       go to state 60
    term2       go to state 61
    term3       go to state 156
    var         go to state 62


State 146

   85 term2: IDENT L_PAREN term3 R_PAREN .

    $default  reduce using rule 85 (term2)


State 147

   35 if: ELSE statement . SEMICOLON if

    SEMICOLON  shift, and go to state 157


State 148

   37 if: statement error .

    $default  reduce using rule 37 (if)


State 149

   34 if: statement SEMICOLON . if

    error   shift, and go to state 120
    IF      shift, and go to state 33
    ENDIF   shift, and go to state 121
    ELSE    shift, and go to state 122
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    RETURN  shift, and go to state 39
    IDENT   shift, and go to state 40

    statement  go to state 123
    if         go to state 158
    var        go to state 43


State 150

   53 boolexpr2: OR relandexpr boolexpr2 .

    $default  reduce using rule 53 (boolexpr2)


State 151

   57 relandexpr2: AND relexpr relandexpr2 .

    $default  reduce using rule 57 (relandexpr2)


State 152

   41 while: statement error .

    $default  reduce using rule 41 (while)


State 153

   39 while: statement SEMICOLON . while

    error    shift, and go to state 133
    IF       shift, and go to state 33
    WHILE    shift, and go to state 34
    DO       shift, and go to state 35
    ENDLOOP  shift, and go to state 134
    BREAK    shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38
    RETURN   shift, and go to state 39
    IDENT    shift, and go to state 40

    statement  go to state 135
    while      go to state 159
    var        go to state 43


State 154

   44 dowhile: ENDLOOP WHILE boolexpr .

    $default  reduce using rule 44 (dowhile)


State 155

   43 dowhile: statement SEMICOLON dowhile .

    $default  reduce using rule 43 (dowhile)


State 156

   88 term3: expression COMMA term3 .

    $default  reduce using rule 88 (term3)


State 157

   35 if: ELSE statement SEMICOLON . if

    error   shift, and go to state 120
    IF      shift, and go to state 33
    ENDIF   shift, and go to state 121
    ELSE    shift, and go to state 122
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    RETURN  shift, and go to state 39
    IDENT   shift, and go to state 40

    statement  go to state 123
    if         go to state 160
    var        go to state 43


State 158

   34 if: statement SEMICOLON if .

    $default  reduce using rule 34 (if)


State 159

   39 while: statement SEMICOLON while .

    $default  reduce using rule 39 (while)


State 160

   35 if: ELSE statement SEMICOLON if .

    $default  reduce using rule 35 (if)
