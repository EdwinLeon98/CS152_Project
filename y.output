State 65 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | function program

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams

    4 funcparams: declaration SEMICOLON funcparams
    5           | END_PARAMS BEGIN_LOCALS funclocals

    6 funclocals: declaration SEMICOLON funclocals
    7           | END_LOCALS BEGIN_BODY funcbody

    8 funcbody: statement SEMICOLON END_BODY
    9         | statement SEMICOLON funcbody
   10         | error

   11 declaration: IDENT COMMA declaration
   12            | IDENT COLON array
   13            | error

   14 array: INTEGER
   15      | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   16 statement: var ASSIGN expression
   17          | IF boolexpr THEN if
   18          | WHILE boolexpr BEGINLOOP while
   19          | DO BEGINLOOP dowhile
   20          | READ rwfunc
   21          | WRITE rwfunc
   22          | READ var
   23          | WRITE var
   24          | BREAK
   25          | RETURN expression
   26          | var error

   27 if: statement SEMICOLON if
   28   | ELSE statement SEMICOLON if
   29   | ENDIF
   30   | statement error

   31 while: statement SEMICOLON while
   32      | ENDLOOP
   33      | statement error

   34 dowhile: statement SEMICOLON dowhile
   35        | ENDLOOP WHILE boolexpr
   36        | statement error

   37 rwfunc: var COMMA rwfunc
   38       | var COMMA var
   39       | var error

   40 boolexpr: relandexpr
   41         | relandexpr boolexpr2

   42 boolexpr2: OR relandexpr boolexpr2
   43          | OR relandexpr

   44 relandexpr: relexpr
   45           | relexpr relandexpr2

   46 relandexpr2: AND relexpr relandexpr2
   47            | AND relexpr

   48 relexpr: NOT relexpr2
   49        | relexpr2

   50 relexpr2: expression comp expression
   51         | TRUE
   52         | FALSE
   53         | L_PAREN boolexpr R_PAREN

   54 comp: EQ
   55     | NEQ
   56     | LT
   57     | GT
   58     | LTE
   59     | GTE

   60 expression: multexpr
   61           | multexpr ADD expression
   62           | multexpr SUB expression

   63 multexpr: term
   64         | term MULT multexpr
   65         | term DIV multexpr
   66         | term MOD multexpr

   67 term: term1
   68     | SUB term1
   69     | term2

   70 term1: var
   71      | NUMBER
   72      | L_PAREN expression R_PAREN

   73 term2: IDENT L_PAREN term3 R_PAREN

   74 term3: %empty
   75      | expression
   76      | expression COMMA term3

   77 var: IDENT
   78    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 10 13 26 30 33 36 39
IDENT (258) 3 11 12 73 77 78
SEMICOLON (259) 3 4 6 8 9 27 28 31 34
COLON (260) 12
COMMA (261) 11 37 38 76
L_PAREN (262) 53 72 73
R_PAREN (263) 53 72 73
L_SQUARE_BRACKET (264) 15 78
R_SQUARE_BRACKET (265) 15 78
ASSIGN (266) 16
EQ (267) 54
NEQ (268) 55
LT (269) 56
GT (270) 57
LTE (271) 58
GTE (272) 59
SUB (273) 62 68
ADD (274) 61
MULT (275) 64
DIV (276) 65
MOD (277) 66
FUNCTION (278) 3
BEGIN_PARAMS (279) 3
END_PARAMS (280) 5
BEGIN_LOCALS (281) 5
END_LOCALS (282) 7
BEGIN_BODY (283) 7
END_BODY (284) 8
ARRAY (285) 15
OF (286) 15
IF (287) 17
THEN (288) 17
ENDIF (289) 29
ELSE (290) 28
WHILE (291) 18 35
DO (292) 19
BEGINLOOP (293) 18 19
ENDLOOP (294) 32 35
BREAK (295) 24
READ (296) 20 22
WRITE (297) 21 23
AND (298) 46 47
OR (299) 42 43
NOT (300) 48
TRUE (301) 51
FALSE (302) 52
RETURN (303) 25
NUMBER (304) 15 71
INTEGER (305) 14 15


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 2
function (53)
    on left: 3, on right: 2
funcparams (54)
    on left: 4 5, on right: 3 4
funclocals (55)
    on left: 6 7, on right: 5 6
funcbody (56)
    on left: 8 9 10, on right: 7 9
declaration (57)
    on left: 11 12 13, on right: 4 6 11
array (58)
    on left: 14 15, on right: 12
statement (59)
    on left: 16 17 18 19 20 21 22 23 24 25 26, on right: 8 9 27 28
    30 31 33 34 36
if (60)
    on left: 27 28 29 30, on right: 17 27 28
while (61)
    on left: 31 32 33, on right: 18 31
dowhile (62)
    on left: 34 35 36, on right: 19 34
rwfunc (63)
    on left: 37 38 39, on right: 20 21 37
boolexpr (64)
    on left: 40 41, on right: 17 18 35 53
boolexpr2 (65)
    on left: 42 43, on right: 41 42
relandexpr (66)
    on left: 44 45, on right: 40 41 42 43
relandexpr2 (67)
    on left: 46 47, on right: 45 46
relexpr (68)
    on left: 48 49, on right: 44 45 46 47
relexpr2 (69)
    on left: 50 51 52 53, on right: 48 49
comp (70)
    on left: 54 55 56 57 58 59, on right: 50
expression (71)
    on left: 60 61 62, on right: 16 25 50 61 62 72 75 76 78
multexpr (72)
    on left: 63 64 65 66, on right: 60 61 62 64 65 66
term (73)
    on left: 67 68 69, on right: 63 64 65 66
term1 (74)
    on left: 70 71 72, on right: 67 68
term2 (75)
    on left: 73, on right: 69
term3 (76)
    on left: 74 75 76, on right: 73 76
var (77)
    on left: 77 78, on right: 16 22 23 26 37 38 39 70


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS funcparams

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    2 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 6
    function  go to state 3


State 4

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS funcparams

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 program: function program .

    $default  reduce using rule 2 (program)


State 7

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS funcparams

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . funcparams

    error       shift, and go to state 9
    IDENT       shift, and go to state 10
    END_PARAMS  shift, and go to state 11

    funcparams   go to state 12
    declaration  go to state 13


State 9

   13 declaration: error .

    $default  reduce using rule 13 (declaration)


State 10

   11 declaration: IDENT . COMMA declaration
   12            | IDENT . COLON array

    COLON  shift, and go to state 14
    COMMA  shift, and go to state 15


State 11

    5 funcparams: END_PARAMS . BEGIN_LOCALS funclocals

    BEGIN_LOCALS  shift, and go to state 16


State 12

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams .

    $default  reduce using rule 3 (function)


State 13

    4 funcparams: declaration . SEMICOLON funcparams

    SEMICOLON  shift, and go to state 17


State 14

   12 declaration: IDENT COLON . array

    ARRAY    shift, and go to state 18
    INTEGER  shift, and go to state 19

    array  go to state 20


State 15

   11 declaration: IDENT COMMA . declaration

    error  shift, and go to state 9
    IDENT  shift, and go to state 10

    declaration  go to state 21


State 16

    5 funcparams: END_PARAMS BEGIN_LOCALS . funclocals

    error       shift, and go to state 9
    IDENT       shift, and go to state 10
    END_LOCALS  shift, and go to state 22

    funclocals   go to state 23
    declaration  go to state 24


State 17

    4 funcparams: declaration SEMICOLON . funcparams

    error       shift, and go to state 9
    IDENT       shift, and go to state 10
    END_PARAMS  shift, and go to state 11

    funcparams   go to state 25
    declaration  go to state 13


State 18

   15 array: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 19

   14 array: INTEGER .

    $default  reduce using rule 14 (array)


State 20

   12 declaration: IDENT COLON array .

    $default  reduce using rule 12 (declaration)


State 21

   11 declaration: IDENT COMMA declaration .

    $default  reduce using rule 11 (declaration)


State 22

    7 funclocals: END_LOCALS . BEGIN_BODY funcbody

    BEGIN_BODY  shift, and go to state 27


State 23

    5 funcparams: END_PARAMS BEGIN_LOCALS funclocals .

    $default  reduce using rule 5 (funcparams)


State 24

    6 funclocals: declaration . SEMICOLON funclocals

    SEMICOLON  shift, and go to state 28


State 25

    4 funcparams: declaration SEMICOLON funcparams .

    $default  reduce using rule 4 (funcparams)


State 26

   15 array: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

    7 funclocals: END_LOCALS BEGIN_BODY . funcbody

    error   shift, and go to state 30
    IDENT   shift, and go to state 31
    IF      shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    RETURN  shift, and go to state 38

    funcbody   go to state 39
    statement  go to state 40
    var        go to state 41


State 28

    6 funclocals: declaration SEMICOLON . funclocals

    error       shift, and go to state 9
    IDENT       shift, and go to state 10
    END_LOCALS  shift, and go to state 22

    funclocals   go to state 42
    declaration  go to state 24


State 29

   15 array: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 43


State 30

   10 funcbody: error .

    $default  reduce using rule 10 (funcbody)


State 31

   77 var: IDENT .
   78    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 44

    $default  reduce using rule 77 (var)


State 32

   17 statement: IF . boolexpr THEN if

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51

    boolexpr    go to state 52
    relandexpr  go to state 53
    relexpr     go to state 54
    relexpr2    go to state 55
    expression  go to state 56
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 33

   18 statement: WHILE . boolexpr BEGINLOOP while

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51

    boolexpr    go to state 62
    relandexpr  go to state 53
    relexpr     go to state 54
    relexpr2    go to state 55
    expression  go to state 56
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 34

   19 statement: DO . BEGINLOOP dowhile

    BEGINLOOP  shift, and go to state 63


State 35

   24 statement: BREAK .

    $default  reduce using rule 24 (statement)


State 36

   20 statement: READ . rwfunc
   22          | READ . var

    IDENT  shift, and go to state 31

    rwfunc  go to state 64
    var     go to state 65


State 37

   21 statement: WRITE . rwfunc
   23          | WRITE . var

    IDENT  shift, and go to state 31

    rwfunc  go to state 66
    var     go to state 67


State 38

   25 statement: RETURN . expression

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    expression  go to state 69
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 39

    7 funclocals: END_LOCALS BEGIN_BODY funcbody .

    $default  reduce using rule 7 (funclocals)


State 40

    8 funcbody: statement . SEMICOLON END_BODY
    9         | statement . SEMICOLON funcbody

    SEMICOLON  shift, and go to state 70


State 41

   16 statement: var . ASSIGN expression
   26          | var . error

    error   shift, and go to state 71
    ASSIGN  shift, and go to state 72


State 42

    6 funclocals: declaration SEMICOLON funclocals .

    $default  reduce using rule 6 (funclocals)


State 43

   15 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 73


State 44

   78 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    expression  go to state 74
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 45

   73 term2: IDENT . L_PAREN term3 R_PAREN
   77 var: IDENT .
   78    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 75
    L_SQUARE_BRACKET  shift, and go to state 44

    $default  reduce using rule 77 (var)


State 46

   53 relexpr2: L_PAREN . boolexpr R_PAREN
   72 term1: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51

    boolexpr    go to state 76
    relandexpr  go to state 53
    relexpr     go to state 54
    relexpr2    go to state 55
    expression  go to state 77
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 47

   68 term: SUB . term1

    IDENT    shift, and go to state 31
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 51

    term1  go to state 78
    var    go to state 61


State 48

   48 relexpr: NOT . relexpr2

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51

    relexpr2    go to state 79
    expression  go to state 56
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 49

   51 relexpr2: TRUE .

    $default  reduce using rule 51 (relexpr2)


State 50

   52 relexpr2: FALSE .

    $default  reduce using rule 52 (relexpr2)


State 51

   71 term1: NUMBER .

    $default  reduce using rule 71 (term1)


State 52

   17 statement: IF boolexpr . THEN if

    THEN  shift, and go to state 80


State 53

   40 boolexpr: relandexpr .
   41         | relandexpr . boolexpr2

    OR  shift, and go to state 81

    $default  reduce using rule 40 (boolexpr)

    boolexpr2  go to state 82


State 54

   44 relandexpr: relexpr .
   45           | relexpr . relandexpr2

    AND  shift, and go to state 83

    $default  reduce using rule 44 (relandexpr)

    relandexpr2  go to state 84


State 55

   49 relexpr: relexpr2 .

    $default  reduce using rule 49 (relexpr)


State 56

   50 relexpr2: expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 91


State 57

   60 expression: multexpr .
   61           | multexpr . ADD expression
   62           | multexpr . SUB expression

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 60 (expression)


State 58

   63 multexpr: term .
   64         | term . MULT multexpr
   65         | term . DIV multexpr
   66         | term . MOD multexpr

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 63 (multexpr)


State 59

   67 term: term1 .

    $default  reduce using rule 67 (term)


State 60

   69 term: term2 .

    $default  reduce using rule 69 (term)


State 61

   70 term1: var .

    $default  reduce using rule 70 (term1)


State 62

   18 statement: WHILE boolexpr . BEGINLOOP while

    BEGINLOOP  shift, and go to state 97


State 63

   19 statement: DO BEGINLOOP . dowhile

    IDENT    shift, and go to state 31
    IF       shift, and go to state 32
    WHILE    shift, and go to state 33
    DO       shift, and go to state 34
    ENDLOOP  shift, and go to state 98
    BREAK    shift, and go to state 35
    READ     shift, and go to state 36
    WRITE    shift, and go to state 37
    RETURN   shift, and go to state 38

    statement  go to state 99
    dowhile    go to state 100
    var        go to state 41


State 64

   20 statement: READ rwfunc .

    $default  reduce using rule 20 (statement)


State 65

   22 statement: READ var .
   37 rwfunc: var . COMMA rwfunc
   38       | var . COMMA var
   39       | var . error

    error  shift, and go to state 101
    COMMA  shift, and go to state 102

    error      [reduce using rule 22 (statement)]
    SEMICOLON  reduce using rule 22 (statement)


State 66

   21 statement: WRITE rwfunc .

    $default  reduce using rule 21 (statement)


State 67

   23 statement: WRITE var .
   37 rwfunc: var . COMMA rwfunc
   38       | var . COMMA var
   39       | var . error

    error  shift, and go to state 101
    COMMA  shift, and go to state 102

    error      [reduce using rule 23 (statement)]
    SEMICOLON  reduce using rule 23 (statement)


State 68

   72 term1: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    expression  go to state 103
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 69

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


State 70

    8 funcbody: statement SEMICOLON . END_BODY
    9         | statement SEMICOLON . funcbody

    error     shift, and go to state 30
    IDENT     shift, and go to state 31
    END_BODY  shift, and go to state 104
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    funcbody   go to state 105
    statement  go to state 40
    var        go to state 41


State 71

   26 statement: var error .

    $default  reduce using rule 26 (statement)


State 72

   16 statement: var ASSIGN . expression

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    expression  go to state 106
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 73

   15 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 107


State 74

   78 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 108


State 75

   73 term2: IDENT L_PAREN . term3 R_PAREN

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    $default  reduce using rule 74 (term3)

    expression  go to state 109
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    term3       go to state 110
    var         go to state 61


State 76

   53 relexpr2: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 111


State 77

   50 relexpr2: expression . comp expression
   72 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112
    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86
    LT       shift, and go to state 87
    GT       shift, and go to state 88
    LTE      shift, and go to state 89
    GTE      shift, and go to state 90

    comp  go to state 91


State 78

   68 term: SUB term1 .

    $default  reduce using rule 68 (term)


State 79

   48 relexpr: NOT relexpr2 .

    $default  reduce using rule 48 (relexpr)


State 80

   17 statement: IF boolexpr THEN . if

    IDENT   shift, and go to state 31
    IF      shift, and go to state 32
    ENDIF   shift, and go to state 113
    ELSE    shift, and go to state 114
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    RETURN  shift, and go to state 38

    statement  go to state 115
    if         go to state 116
    var        go to state 41


State 81

   42 boolexpr2: OR . relandexpr boolexpr2
   43          | OR . relandexpr

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51

    relandexpr  go to state 117
    relexpr     go to state 54
    relexpr2    go to state 55
    expression  go to state 56
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 82

   41 boolexpr: relandexpr boolexpr2 .

    $default  reduce using rule 41 (boolexpr)


State 83

   46 relandexpr2: AND . relexpr relandexpr2
   47            | AND . relexpr

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51

    relexpr     go to state 118
    relexpr2    go to state 55
    expression  go to state 56
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 84

   45 relandexpr: relexpr relandexpr2 .

    $default  reduce using rule 45 (relandexpr)


State 85

   54 comp: EQ .

    $default  reduce using rule 54 (comp)


State 86

   55 comp: NEQ .

    $default  reduce using rule 55 (comp)


State 87

   56 comp: LT .

    $default  reduce using rule 56 (comp)


State 88

   57 comp: GT .

    $default  reduce using rule 57 (comp)


State 89

   58 comp: LTE .

    $default  reduce using rule 58 (comp)


State 90

   59 comp: GTE .

    $default  reduce using rule 59 (comp)


State 91

   50 relexpr2: expression comp . expression

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    expression  go to state 119
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 92

   62 expression: multexpr SUB . expression

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    expression  go to state 120
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 93

   61 expression: multexpr ADD . expression

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    expression  go to state 121
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 94

   64 multexpr: term MULT . multexpr

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    multexpr  go to state 122
    term      go to state 58
    term1     go to state 59
    term2     go to state 60
    var       go to state 61


State 95

   65 multexpr: term DIV . multexpr

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    multexpr  go to state 123
    term      go to state 58
    term1     go to state 59
    term2     go to state 60
    var       go to state 61


State 96

   66 multexpr: term MOD . multexpr

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    multexpr  go to state 124
    term      go to state 58
    term1     go to state 59
    term2     go to state 60
    var       go to state 61


State 97

   18 statement: WHILE boolexpr BEGINLOOP . while

    IDENT    shift, and go to state 31
    IF       shift, and go to state 32
    WHILE    shift, and go to state 33
    DO       shift, and go to state 34
    ENDLOOP  shift, and go to state 125
    BREAK    shift, and go to state 35
    READ     shift, and go to state 36
    WRITE    shift, and go to state 37
    RETURN   shift, and go to state 38

    statement  go to state 126
    while      go to state 127
    var        go to state 41


State 98

   35 dowhile: ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 128


State 99

   34 dowhile: statement . SEMICOLON dowhile
   36        | statement . error

    error      shift, and go to state 129
    SEMICOLON  shift, and go to state 130


State 100

   19 statement: DO BEGINLOOP dowhile .

    $default  reduce using rule 19 (statement)


State 101

   39 rwfunc: var error .

    $default  reduce using rule 39 (rwfunc)


State 102

   37 rwfunc: var COMMA . rwfunc
   38       | var COMMA . var

    IDENT  shift, and go to state 31

    rwfunc  go to state 131
    var     go to state 132


State 103

   72 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112


State 104

    8 funcbody: statement SEMICOLON END_BODY .

    $default  reduce using rule 8 (funcbody)


State 105

    9 funcbody: statement SEMICOLON funcbody .

    $default  reduce using rule 9 (funcbody)


State 106

   16 statement: var ASSIGN expression .

    $default  reduce using rule 16 (statement)


State 107

   15 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 15 (array)


State 108

   78 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 78 (var)


State 109

   75 term3: expression .
   76      | expression . COMMA term3

    COMMA  shift, and go to state 133

    $default  reduce using rule 75 (term3)


State 110

   73 term2: IDENT L_PAREN term3 . R_PAREN

    R_PAREN  shift, and go to state 134


State 111

   53 relexpr2: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 53 (relexpr2)


State 112

   72 term1: L_PAREN expression R_PAREN .

    $default  reduce using rule 72 (term1)


State 113

   29 if: ENDIF .

    $default  reduce using rule 29 (if)


State 114

   28 if: ELSE . statement SEMICOLON if

    IDENT   shift, and go to state 31
    IF      shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    RETURN  shift, and go to state 38

    statement  go to state 135
    var        go to state 41


State 115

   27 if: statement . SEMICOLON if
   30   | statement . error

    error      shift, and go to state 136
    SEMICOLON  shift, and go to state 137


State 116

   17 statement: IF boolexpr THEN if .

    $default  reduce using rule 17 (statement)


State 117

   42 boolexpr2: OR relandexpr . boolexpr2
   43          | OR relandexpr .

    OR  shift, and go to state 81

    $default  reduce using rule 43 (boolexpr2)

    boolexpr2  go to state 138


State 118

   46 relandexpr2: AND relexpr . relandexpr2
   47            | AND relexpr .

    AND  shift, and go to state 83

    $default  reduce using rule 47 (relandexpr2)

    relandexpr2  go to state 139


State 119

   50 relexpr2: expression comp expression .

    $default  reduce using rule 50 (relexpr2)


State 120

   62 expression: multexpr SUB expression .

    $default  reduce using rule 62 (expression)


State 121

   61 expression: multexpr ADD expression .

    $default  reduce using rule 61 (expression)


State 122

   64 multexpr: term MULT multexpr .

    $default  reduce using rule 64 (multexpr)


State 123

   65 multexpr: term DIV multexpr .

    $default  reduce using rule 65 (multexpr)


State 124

   66 multexpr: term MOD multexpr .

    $default  reduce using rule 66 (multexpr)


State 125

   32 while: ENDLOOP .

    $default  reduce using rule 32 (while)


State 126

   31 while: statement . SEMICOLON while
   33      | statement . error

    error      shift, and go to state 140
    SEMICOLON  shift, and go to state 141


State 127

   18 statement: WHILE boolexpr BEGINLOOP while .

    $default  reduce using rule 18 (statement)


State 128

   35 dowhile: ENDLOOP WHILE . boolexpr

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NUMBER   shift, and go to state 51

    boolexpr    go to state 142
    relandexpr  go to state 53
    relexpr     go to state 54
    relexpr2    go to state 55
    expression  go to state 56
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    var         go to state 61


State 129

   36 dowhile: statement error .

    $default  reduce using rule 36 (dowhile)


State 130

   34 dowhile: statement SEMICOLON . dowhile

    IDENT    shift, and go to state 31
    IF       shift, and go to state 32
    WHILE    shift, and go to state 33
    DO       shift, and go to state 34
    ENDLOOP  shift, and go to state 98
    BREAK    shift, and go to state 35
    READ     shift, and go to state 36
    WRITE    shift, and go to state 37
    RETURN   shift, and go to state 38

    statement  go to state 99
    dowhile    go to state 143
    var        go to state 41


State 131

   37 rwfunc: var COMMA rwfunc .

    $default  reduce using rule 37 (rwfunc)


State 132

   37 rwfunc: var . COMMA rwfunc
   38       | var . COMMA var
   38       | var COMMA var .
   39       | var . error

    error  shift, and go to state 101
    COMMA  shift, and go to state 102

    error      [reduce using rule 38 (rwfunc)]
    SEMICOLON  reduce using rule 38 (rwfunc)


State 133

   76 term3: expression COMMA . term3

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47
    NUMBER   shift, and go to state 51

    $default  reduce using rule 74 (term3)

    expression  go to state 109
    multexpr    go to state 57
    term        go to state 58
    term1       go to state 59
    term2       go to state 60
    term3       go to state 144
    var         go to state 61


State 134

   73 term2: IDENT L_PAREN term3 R_PAREN .

    $default  reduce using rule 73 (term2)


State 135

   28 if: ELSE statement . SEMICOLON if

    SEMICOLON  shift, and go to state 145


State 136

   30 if: statement error .

    $default  reduce using rule 30 (if)


State 137

   27 if: statement SEMICOLON . if

    IDENT   shift, and go to state 31
    IF      shift, and go to state 32
    ENDIF   shift, and go to state 113
    ELSE    shift, and go to state 114
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    RETURN  shift, and go to state 38

    statement  go to state 115
    if         go to state 146
    var        go to state 41


State 138

   42 boolexpr2: OR relandexpr boolexpr2 .

    $default  reduce using rule 42 (boolexpr2)


State 139

   46 relandexpr2: AND relexpr relandexpr2 .

    $default  reduce using rule 46 (relandexpr2)


State 140

   33 while: statement error .

    $default  reduce using rule 33 (while)


State 141

   31 while: statement SEMICOLON . while

    IDENT    shift, and go to state 31
    IF       shift, and go to state 32
    WHILE    shift, and go to state 33
    DO       shift, and go to state 34
    ENDLOOP  shift, and go to state 125
    BREAK    shift, and go to state 35
    READ     shift, and go to state 36
    WRITE    shift, and go to state 37
    RETURN   shift, and go to state 38

    statement  go to state 126
    while      go to state 147
    var        go to state 41


State 142

   35 dowhile: ENDLOOP WHILE boolexpr .

    $default  reduce using rule 35 (dowhile)


State 143

   34 dowhile: statement SEMICOLON dowhile .

    $default  reduce using rule 34 (dowhile)


State 144

   76 term3: expression COMMA term3 .

    $default  reduce using rule 76 (term3)


State 145

   28 if: ELSE statement SEMICOLON . if

    IDENT   shift, and go to state 31
    IF      shift, and go to state 32
    ENDIF   shift, and go to state 113
    ELSE    shift, and go to state 114
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    RETURN  shift, and go to state 38

    statement  go to state 115
    if         go to state 148
    var        go to state 41


State 146

   27 if: statement SEMICOLON if .

    $default  reduce using rule 27 (if)


State 147

   31 while: statement SEMICOLON while .

    $default  reduce using rule 31 (while)


State 148

   28 if: ELSE statement SEMICOLON if .

    $default  reduce using rule 28 (if)
