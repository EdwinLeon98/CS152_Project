Grammar

    0 $accept: program $end

    1 program: %empty
    2        | function program

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams

    4 funcparams: declaration SEMICOLON funcparams
    5           | END_PARAMS BEGIN_LOCALS funclocals

    6 funclocals: declaration SEMICOLON funclocals
    7           | END_LOCALS BEGIN_BODY funcbody

    8 funcbody: statement SEMICOLON END_BODY
    9         | statement SEMICOLON funcbody

   10 declaration: funcident

   11 funcident: IDENT COMMA funcident
   12          | IDENT COLON array

   13 array: INTEGER
   14      | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   15 statement: var ASSIGN expression
   16          | if
   17          | while
   18          | dowhile
   19          | read
   20          | write
   21          | BREAK
   22          | RETURN expression

   23 if: IF boolexpr THEN statement SEMICOLON elsefunc

   24 elsefunc: statement SEMICOLON elsefunc
   25         | ELSE statement SEMICOLON elsefunc
   26         | ENDIF

   27 while: WHILE boolexpr BEGINLOOP whilefunc

   28 whilefunc: statement SEMICOLON whilefunc
   29          | statement SEMICOLON ENDLOOP

   30 dowhile: DO BEGINLOOP dofunc

   31 dofunc: statement SEMICOLON dofunc
   32       | statement SEMICOLON ENDLOOP WHILE boolexpr

   33 read: READ rwfunc

   34 write: WRITE rwfunc

   35 rwfunc: var COMMA rwfunc
   36       | var

   37 boolexpr: relandexpr
   38         | relandexpr boolexpr2

   39 boolexpr2: OR relandexpr boolexpr2
   40          | OR relandexpr

   41 relandexpr: relexpr
   42           | relexpr relandexpr2

   43 relandexpr2: AND relexpr relandexpr2
   44            | AND relexpr

   45 relexpr: NOT relexpr2
   46        | relexpr2

   47 relexpr2: expression comp expression
   48         | TRUE
   49         | FALSE
   50         | L_PAREN boolexpr R_PAREN

   51 comp: EQ
   52     | NEQ
   53     | LT
   54     | GT
   55     | LTE
   56     | GTE

   57 expression: multexpr
   58           | multexpr ADD expression
   59           | multexpr SUB expression

   60 multexpr: term
   61         | term MULT multexpr
   62         | term DIV multexpr
   63         | term MOD multexpr

   64 term: term1
   65     | SUB term1
   66     | term2

   67 term1: var
   68      | NUMBER
   69      | L_PAREN expression R_PAREN

   70 term2: IDENT L_PAREN term3 R_PAREN

   71 term3: %empty
   72      | expression
   73      | expression COMMA term3

   74 var: IDENT
   75    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 3 11 12 70 74 75
SEMICOLON (259) 3 4 6 8 9 23 24 25 28 29 31 32
COLON (260) 12
COMMA (261) 11 35 73
L_PAREN (262) 50 69 70
R_PAREN (263) 50 69 70
L_SQUARE_BRACKET (264) 14 75
R_SQUARE_BRACKET (265) 14 75
ASSIGN (266) 15
EQ (267) 51
NEQ (268) 52
LT (269) 53
GT (270) 54
LTE (271) 55
GTE (272) 56
SUB (273) 59 65
ADD (274) 58
MULT (275) 61
DIV (276) 62
MOD (277) 63
FUNCTION (278) 3
BEGIN_PARAMS (279) 3
END_PARAMS (280) 5
BEGIN_LOCALS (281) 5
END_LOCALS (282) 7
BEGIN_BODY (283) 7
END_BODY (284) 8
ARRAY (285) 14
OF (286) 14
IF (287) 23
THEN (288) 23
ENDIF (289) 26
ELSE (290) 25
WHILE (291) 27 32
DO (292) 30
BEGINLOOP (293) 27 30
ENDLOOP (294) 29 32
BREAK (295) 21
READ (296) 33
WRITE (297) 34
AND (298) 43 44
OR (299) 39 40
NOT (300) 45
TRUE (301) 48
FALSE (302) 49
RETURN (303) 22
NUMBER (304) 14 68
INTEGER (305) 13 14


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 2
function (53)
    on left: 3, on right: 2
funcparams (54)
    on left: 4 5, on right: 3 4
funclocals (55)
    on left: 6 7, on right: 5 6
funcbody (56)
    on left: 8 9, on right: 7 9
declaration (57)
    on left: 10, on right: 4 6
funcident (58)
    on left: 11 12, on right: 10 11
array (59)
    on left: 13 14, on right: 12
statement (60)
    on left: 15 16 17 18 19 20 21 22, on right: 8 9 23 24 25 28 29
    31 32
if (61)
    on left: 23, on right: 16
elsefunc (62)
    on left: 24 25 26, on right: 23 24 25
while (63)
    on left: 27, on right: 17
whilefunc (64)
    on left: 28 29, on right: 27 28
dowhile (65)
    on left: 30, on right: 18
dofunc (66)
    on left: 31 32, on right: 30 31
read (67)
    on left: 33, on right: 19
write (68)
    on left: 34, on right: 20
rwfunc (69)
    on left: 35 36, on right: 33 34 35
boolexpr (70)
    on left: 37 38, on right: 23 27 32 50
boolexpr2 (71)
    on left: 39 40, on right: 38 39
relandexpr (72)
    on left: 41 42, on right: 37 38 39 40
relandexpr2 (73)
    on left: 43 44, on right: 42 43
relexpr (74)
    on left: 45 46, on right: 41 42 43 44
relexpr2 (75)
    on left: 47 48 49 50, on right: 45 46
comp (76)
    on left: 51 52 53 54 55 56, on right: 47
expression (77)
    on left: 57 58 59, on right: 15 22 47 58 59 69 72 73 75
multexpr (78)
    on left: 60 61 62 63, on right: 57 58 59 61 62 63
term (79)
    on left: 64 65 66, on right: 60 61 62 63
term1 (80)
    on left: 67 68 69, on right: 64 65
term2 (81)
    on left: 70, on right: 66
term3 (82)
    on left: 71 72 73, on right: 70 73
var (83)
    on left: 74 75, on right: 15 35 36 67


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS funcparams

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    2 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 6
    function  go to state 3


State 4

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS funcparams

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 program: function program .

    $default  reduce using rule 2 (program)


State 7

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS funcparams

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . funcparams

    IDENT       shift, and go to state 9
    END_PARAMS  shift, and go to state 10

    funcparams   go to state 11
    declaration  go to state 12
    funcident    go to state 13


State 9

   11 funcident: IDENT . COMMA funcident
   12          | IDENT . COLON array

    COLON  shift, and go to state 14
    COMMA  shift, and go to state 15


State 10

    5 funcparams: END_PARAMS . BEGIN_LOCALS funclocals

    BEGIN_LOCALS  shift, and go to state 16


State 11

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams .

    $default  reduce using rule 3 (function)


State 12

    4 funcparams: declaration . SEMICOLON funcparams

    SEMICOLON  shift, and go to state 17


State 13

   10 declaration: funcident .

    $default  reduce using rule 10 (declaration)


State 14

   12 funcident: IDENT COLON . array

    ARRAY    shift, and go to state 18
    INTEGER  shift, and go to state 19

    array  go to state 20


State 15

   11 funcident: IDENT COMMA . funcident

    IDENT  shift, and go to state 9

    funcident  go to state 21


State 16

    5 funcparams: END_PARAMS BEGIN_LOCALS . funclocals

    IDENT       shift, and go to state 9
    END_LOCALS  shift, and go to state 22

    funclocals   go to state 23
    declaration  go to state 24
    funcident    go to state 13


State 17

    4 funcparams: declaration SEMICOLON . funcparams

    IDENT       shift, and go to state 9
    END_PARAMS  shift, and go to state 10

    funcparams   go to state 25
    declaration  go to state 12
    funcident    go to state 13


State 18

   14 array: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 19

   13 array: INTEGER .

    $default  reduce using rule 13 (array)


State 20

   12 funcident: IDENT COLON array .

    $default  reduce using rule 12 (funcident)


State 21

   11 funcident: IDENT COMMA funcident .

    $default  reduce using rule 11 (funcident)


State 22

    7 funclocals: END_LOCALS . BEGIN_BODY funcbody

    BEGIN_BODY  shift, and go to state 27


State 23

    5 funcparams: END_PARAMS BEGIN_LOCALS funclocals .

    $default  reduce using rule 5 (funcparams)


State 24

    6 funclocals: declaration . SEMICOLON funclocals

    SEMICOLON  shift, and go to state 28


State 25

    4 funcparams: declaration SEMICOLON funcparams .

    $default  reduce using rule 4 (funcparams)


State 26

   14 array: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

    7 funclocals: END_LOCALS BEGIN_BODY . funcbody

    IDENT   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    DO      shift, and go to state 33
    BREAK   shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    RETURN  shift, and go to state 37

    funcbody   go to state 38
    statement  go to state 39
    if         go to state 40
    while      go to state 41
    dowhile    go to state 42
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 28

    6 funclocals: declaration SEMICOLON . funclocals

    IDENT       shift, and go to state 9
    END_LOCALS  shift, and go to state 22

    funclocals   go to state 46
    declaration  go to state 24
    funcident    go to state 13


State 29

   14 array: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 47


State 30

   74 var: IDENT .
   75    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 48

    $default  reduce using rule 74 (var)


State 31

   23 if: IF . boolexpr THEN statement SEMICOLON elsefunc

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55

    boolexpr    go to state 56
    relandexpr  go to state 57
    relexpr     go to state 58
    relexpr2    go to state 59
    expression  go to state 60
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 32

   27 while: WHILE . boolexpr BEGINLOOP whilefunc

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55

    boolexpr    go to state 66
    relandexpr  go to state 57
    relexpr     go to state 58
    relexpr2    go to state 59
    expression  go to state 60
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 33

   30 dowhile: DO . BEGINLOOP dofunc

    BEGINLOOP  shift, and go to state 67


State 34

   21 statement: BREAK .

    $default  reduce using rule 21 (statement)


State 35

   33 read: READ . rwfunc

    IDENT  shift, and go to state 30

    rwfunc  go to state 68
    var     go to state 69


State 36

   34 write: WRITE . rwfunc

    IDENT  shift, and go to state 30

    rwfunc  go to state 70
    var     go to state 69


State 37

   22 statement: RETURN . expression

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    expression  go to state 72
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 38

    7 funclocals: END_LOCALS BEGIN_BODY funcbody .

    $default  reduce using rule 7 (funclocals)


State 39

    8 funcbody: statement . SEMICOLON END_BODY
    9         | statement . SEMICOLON funcbody

    SEMICOLON  shift, and go to state 73


State 40

   16 statement: if .

    $default  reduce using rule 16 (statement)


State 41

   17 statement: while .

    $default  reduce using rule 17 (statement)


State 42

   18 statement: dowhile .

    $default  reduce using rule 18 (statement)


State 43

   19 statement: read .

    $default  reduce using rule 19 (statement)


State 44

   20 statement: write .

    $default  reduce using rule 20 (statement)


State 45

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 74


State 46

    6 funclocals: declaration SEMICOLON funclocals .

    $default  reduce using rule 6 (funclocals)


State 47

   14 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 75


State 48

   75 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    expression  go to state 76
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 49

   70 term2: IDENT . L_PAREN term3 R_PAREN
   74 var: IDENT .
   75    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 77
    L_SQUARE_BRACKET  shift, and go to state 48

    $default  reduce using rule 74 (var)


State 50

   50 relexpr2: L_PAREN . boolexpr R_PAREN
   69 term1: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55

    boolexpr    go to state 78
    relandexpr  go to state 57
    relexpr     go to state 58
    relexpr2    go to state 59
    expression  go to state 79
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 51

   65 term: SUB . term1

    IDENT    shift, and go to state 30
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55

    term1  go to state 80
    var    go to state 65


State 52

   45 relexpr: NOT . relexpr2

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55

    relexpr2    go to state 81
    expression  go to state 60
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 53

   48 relexpr2: TRUE .

    $default  reduce using rule 48 (relexpr2)


State 54

   49 relexpr2: FALSE .

    $default  reduce using rule 49 (relexpr2)


State 55

   68 term1: NUMBER .

    $default  reduce using rule 68 (term1)


State 56

   23 if: IF boolexpr . THEN statement SEMICOLON elsefunc

    THEN  shift, and go to state 82


State 57

   37 boolexpr: relandexpr .
   38         | relandexpr . boolexpr2

    OR  shift, and go to state 83

    $default  reduce using rule 37 (boolexpr)

    boolexpr2  go to state 84


State 58

   41 relandexpr: relexpr .
   42           | relexpr . relandexpr2

    AND  shift, and go to state 85

    $default  reduce using rule 41 (relandexpr)

    relandexpr2  go to state 86


State 59

   46 relexpr: relexpr2 .

    $default  reduce using rule 46 (relexpr)


State 60

   47 relexpr2: expression . comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 93


State 61

   57 expression: multexpr .
   58           | multexpr . ADD expression
   59           | multexpr . SUB expression

    SUB  shift, and go to state 94
    ADD  shift, and go to state 95

    $default  reduce using rule 57 (expression)


State 62

   60 multexpr: term .
   61         | term . MULT multexpr
   62         | term . DIV multexpr
   63         | term . MOD multexpr

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 60 (multexpr)


State 63

   64 term: term1 .

    $default  reduce using rule 64 (term)


State 64

   66 term: term2 .

    $default  reduce using rule 66 (term)


State 65

   67 term1: var .

    $default  reduce using rule 67 (term1)


State 66

   27 while: WHILE boolexpr . BEGINLOOP whilefunc

    BEGINLOOP  shift, and go to state 99


State 67

   30 dowhile: DO BEGINLOOP . dofunc

    IDENT   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    DO      shift, and go to state 33
    BREAK   shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    RETURN  shift, and go to state 37

    statement  go to state 100
    if         go to state 40
    while      go to state 41
    dowhile    go to state 42
    dofunc     go to state 101
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 68

   33 read: READ rwfunc .

    $default  reduce using rule 33 (read)


State 69

   35 rwfunc: var . COMMA rwfunc
   36       | var .

    COMMA  shift, and go to state 102

    $default  reduce using rule 36 (rwfunc)


State 70

   34 write: WRITE rwfunc .

    $default  reduce using rule 34 (write)


State 71

   69 term1: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    expression  go to state 103
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 72

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 73

    8 funcbody: statement SEMICOLON . END_BODY
    9         | statement SEMICOLON . funcbody

    IDENT     shift, and go to state 30
    END_BODY  shift, and go to state 104
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    BREAK     shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    funcbody   go to state 105
    statement  go to state 39
    if         go to state 40
    while      go to state 41
    dowhile    go to state 42
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 74

   15 statement: var ASSIGN . expression

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    expression  go to state 106
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 75

   14 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 107


State 76

   75 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 108


State 77

   70 term2: IDENT L_PAREN . term3 R_PAREN

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    $default  reduce using rule 71 (term3)

    expression  go to state 109
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    term3       go to state 110
    var         go to state 65


State 78

   50 relexpr2: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 111


State 79

   47 relexpr2: expression . comp expression
   69 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112
    EQ       shift, and go to state 87
    NEQ      shift, and go to state 88
    LT       shift, and go to state 89
    GT       shift, and go to state 90
    LTE      shift, and go to state 91
    GTE      shift, and go to state 92

    comp  go to state 93


State 80

   65 term: SUB term1 .

    $default  reduce using rule 65 (term)


State 81

   45 relexpr: NOT relexpr2 .

    $default  reduce using rule 45 (relexpr)


State 82

   23 if: IF boolexpr THEN . statement SEMICOLON elsefunc

    IDENT   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    DO      shift, and go to state 33
    BREAK   shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    RETURN  shift, and go to state 37

    statement  go to state 113
    if         go to state 40
    while      go to state 41
    dowhile    go to state 42
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 83

   39 boolexpr2: OR . relandexpr boolexpr2
   40          | OR . relandexpr

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55

    relandexpr  go to state 114
    relexpr     go to state 58
    relexpr2    go to state 59
    expression  go to state 60
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 84

   38 boolexpr: relandexpr boolexpr2 .

    $default  reduce using rule 38 (boolexpr)


State 85

   43 relandexpr2: AND . relexpr relandexpr2
   44            | AND . relexpr

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55

    relexpr     go to state 115
    relexpr2    go to state 59
    expression  go to state 60
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 86

   42 relandexpr: relexpr relandexpr2 .

    $default  reduce using rule 42 (relandexpr)


State 87

   51 comp: EQ .

    $default  reduce using rule 51 (comp)


State 88

   52 comp: NEQ .

    $default  reduce using rule 52 (comp)


State 89

   53 comp: LT .

    $default  reduce using rule 53 (comp)


State 90

   54 comp: GT .

    $default  reduce using rule 54 (comp)


State 91

   55 comp: LTE .

    $default  reduce using rule 55 (comp)


State 92

   56 comp: GTE .

    $default  reduce using rule 56 (comp)


State 93

   47 relexpr2: expression comp . expression

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    expression  go to state 116
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 94

   59 expression: multexpr SUB . expression

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    expression  go to state 117
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 95

   58 expression: multexpr ADD . expression

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    expression  go to state 118
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 96

   61 multexpr: term MULT . multexpr

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    multexpr  go to state 119
    term      go to state 62
    term1     go to state 63
    term2     go to state 64
    var       go to state 65


State 97

   62 multexpr: term DIV . multexpr

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    multexpr  go to state 120
    term      go to state 62
    term1     go to state 63
    term2     go to state 64
    var       go to state 65


State 98

   63 multexpr: term MOD . multexpr

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    multexpr  go to state 121
    term      go to state 62
    term1     go to state 63
    term2     go to state 64
    var       go to state 65


State 99

   27 while: WHILE boolexpr BEGINLOOP . whilefunc

    IDENT   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    DO      shift, and go to state 33
    BREAK   shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    RETURN  shift, and go to state 37

    statement  go to state 122
    if         go to state 40
    while      go to state 41
    whilefunc  go to state 123
    dowhile    go to state 42
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 100

   31 dofunc: statement . SEMICOLON dofunc
   32       | statement . SEMICOLON ENDLOOP WHILE boolexpr

    SEMICOLON  shift, and go to state 124


State 101

   30 dowhile: DO BEGINLOOP dofunc .

    $default  reduce using rule 30 (dowhile)


State 102

   35 rwfunc: var COMMA . rwfunc

    IDENT  shift, and go to state 30

    rwfunc  go to state 125
    var     go to state 69


State 103

   69 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112


State 104

    8 funcbody: statement SEMICOLON END_BODY .

    $default  reduce using rule 8 (funcbody)


State 105

    9 funcbody: statement SEMICOLON funcbody .

    $default  reduce using rule 9 (funcbody)


State 106

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 107

   14 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (array)


State 108

   75 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 75 (var)


State 109

   72 term3: expression .
   73      | expression . COMMA term3

    COMMA  shift, and go to state 126

    $default  reduce using rule 72 (term3)


State 110

   70 term2: IDENT L_PAREN term3 . R_PAREN

    R_PAREN  shift, and go to state 127


State 111

   50 relexpr2: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 50 (relexpr2)


State 112

   69 term1: L_PAREN expression R_PAREN .

    $default  reduce using rule 69 (term1)


State 113

   23 if: IF boolexpr THEN statement . SEMICOLON elsefunc

    SEMICOLON  shift, and go to state 128


State 114

   39 boolexpr2: OR relandexpr . boolexpr2
   40          | OR relandexpr .

    OR  shift, and go to state 83

    $default  reduce using rule 40 (boolexpr2)

    boolexpr2  go to state 129


State 115

   43 relandexpr2: AND relexpr . relandexpr2
   44            | AND relexpr .

    AND  shift, and go to state 85

    $default  reduce using rule 44 (relandexpr2)

    relandexpr2  go to state 130


State 116

   47 relexpr2: expression comp expression .

    $default  reduce using rule 47 (relexpr2)


State 117

   59 expression: multexpr SUB expression .

    $default  reduce using rule 59 (expression)


State 118

   58 expression: multexpr ADD expression .

    $default  reduce using rule 58 (expression)


State 119

   61 multexpr: term MULT multexpr .

    $default  reduce using rule 61 (multexpr)


State 120

   62 multexpr: term DIV multexpr .

    $default  reduce using rule 62 (multexpr)


State 121

   63 multexpr: term MOD multexpr .

    $default  reduce using rule 63 (multexpr)


State 122

   28 whilefunc: statement . SEMICOLON whilefunc
   29          | statement . SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 131


State 123

   27 while: WHILE boolexpr BEGINLOOP whilefunc .

    $default  reduce using rule 27 (while)


State 124

   31 dofunc: statement SEMICOLON . dofunc
   32       | statement SEMICOLON . ENDLOOP WHILE boolexpr

    IDENT    shift, and go to state 30
    IF       shift, and go to state 31
    WHILE    shift, and go to state 32
    DO       shift, and go to state 33
    ENDLOOP  shift, and go to state 132
    BREAK    shift, and go to state 34
    READ     shift, and go to state 35
    WRITE    shift, and go to state 36
    RETURN   shift, and go to state 37

    statement  go to state 100
    if         go to state 40
    while      go to state 41
    dowhile    go to state 42
    dofunc     go to state 133
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 125

   35 rwfunc: var COMMA rwfunc .

    $default  reduce using rule 35 (rwfunc)


State 126

   73 term3: expression COMMA . term3

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 71
    SUB      shift, and go to state 51
    NUMBER   shift, and go to state 55

    $default  reduce using rule 71 (term3)

    expression  go to state 109
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    term3       go to state 134
    var         go to state 65


State 127

   70 term2: IDENT L_PAREN term3 R_PAREN .

    $default  reduce using rule 70 (term2)


State 128

   23 if: IF boolexpr THEN statement SEMICOLON . elsefunc

    IDENT   shift, and go to state 30
    IF      shift, and go to state 31
    ENDIF   shift, and go to state 135
    ELSE    shift, and go to state 136
    WHILE   shift, and go to state 32
    DO      shift, and go to state 33
    BREAK   shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    RETURN  shift, and go to state 37

    statement  go to state 137
    if         go to state 40
    elsefunc   go to state 138
    while      go to state 41
    dowhile    go to state 42
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 129

   39 boolexpr2: OR relandexpr boolexpr2 .

    $default  reduce using rule 39 (boolexpr2)


State 130

   43 relandexpr2: AND relexpr relandexpr2 .

    $default  reduce using rule 43 (relandexpr2)


State 131

   28 whilefunc: statement SEMICOLON . whilefunc
   29          | statement SEMICOLON . ENDLOOP

    IDENT    shift, and go to state 30
    IF       shift, and go to state 31
    WHILE    shift, and go to state 32
    DO       shift, and go to state 33
    ENDLOOP  shift, and go to state 139
    BREAK    shift, and go to state 34
    READ     shift, and go to state 35
    WRITE    shift, and go to state 36
    RETURN   shift, and go to state 37

    statement  go to state 122
    if         go to state 40
    while      go to state 41
    whilefunc  go to state 140
    dowhile    go to state 42
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 132

   32 dofunc: statement SEMICOLON ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 141


State 133

   31 dofunc: statement SEMICOLON dofunc .

    $default  reduce using rule 31 (dofunc)


State 134

   73 term3: expression COMMA term3 .

    $default  reduce using rule 73 (term3)


State 135

   26 elsefunc: ENDIF .

    $default  reduce using rule 26 (elsefunc)


State 136

   25 elsefunc: ELSE . statement SEMICOLON elsefunc

    IDENT   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    DO      shift, and go to state 33
    BREAK   shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    RETURN  shift, and go to state 37

    statement  go to state 142
    if         go to state 40
    while      go to state 41
    dowhile    go to state 42
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 137

   24 elsefunc: statement . SEMICOLON elsefunc

    SEMICOLON  shift, and go to state 143


State 138

   23 if: IF boolexpr THEN statement SEMICOLON elsefunc .

    $default  reduce using rule 23 (if)


State 139

   29 whilefunc: statement SEMICOLON ENDLOOP .

    $default  reduce using rule 29 (whilefunc)


State 140

   28 whilefunc: statement SEMICOLON whilefunc .

    $default  reduce using rule 28 (whilefunc)


State 141

   32 dofunc: statement SEMICOLON ENDLOOP WHILE . boolexpr

    IDENT    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55

    boolexpr    go to state 144
    relandexpr  go to state 57
    relexpr     go to state 58
    relexpr2    go to state 59
    expression  go to state 60
    multexpr    go to state 61
    term        go to state 62
    term1       go to state 63
    term2       go to state 64
    var         go to state 65


State 142

   25 elsefunc: ELSE statement . SEMICOLON elsefunc

    SEMICOLON  shift, and go to state 145


State 143

   24 elsefunc: statement SEMICOLON . elsefunc

    IDENT   shift, and go to state 30
    IF      shift, and go to state 31
    ENDIF   shift, and go to state 135
    ELSE    shift, and go to state 136
    WHILE   shift, and go to state 32
    DO      shift, and go to state 33
    BREAK   shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    RETURN  shift, and go to state 37

    statement  go to state 137
    if         go to state 40
    elsefunc   go to state 146
    while      go to state 41
    dowhile    go to state 42
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 144

   32 dofunc: statement SEMICOLON ENDLOOP WHILE boolexpr .

    $default  reduce using rule 32 (dofunc)


State 145

   25 elsefunc: ELSE statement SEMICOLON . elsefunc

    IDENT   shift, and go to state 30
    IF      shift, and go to state 31
    ENDIF   shift, and go to state 135
    ELSE    shift, and go to state 136
    WHILE   shift, and go to state 32
    DO      shift, and go to state 33
    BREAK   shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    RETURN  shift, and go to state 37

    statement  go to state 137
    if         go to state 40
    elsefunc   go to state 147
    while      go to state 41
    dowhile    go to state 42
    read       go to state 43
    write      go to state 44
    var        go to state 45


State 146

   24 elsefunc: statement SEMICOLON elsefunc .

    $default  reduce using rule 24 (elsefunc)


State 147

   25 elsefunc: ELSE statement SEMICOLON elsefunc .

    $default  reduce using rule 25 (elsefunc)
