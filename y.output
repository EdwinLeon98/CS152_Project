State 13 conflicts: 1 reduce/reduce
State 25 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | function program

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams
    4         | FUNCTION IDENT SEMICOLON BEGIN_PARAMS error
    5         | FUNCTION IDENT SEMICOLON error
    6         | FUNCTION IDENT error
    7         | FUNCTION error
    8         | error

    9 funcparams: declaration SEMICOLON funcparams
   10           | END_PARAMS BEGIN_LOCALS funclocals
   11           | declaration error
   12           | END_PARAMS error
   13           | END_PARAMS BEGIN_LOCALS error

   14 funclocals: declaration SEMICOLON funclocals
   15           | END_LOCALS BEGIN_BODY funcbody
   16           | declaration error
   17           | END_LOCALS error

   18 funcbody: statement SEMICOLON END_BODY
   19         | statement SEMICOLON funcbody
   20         | statement SEMICOLON error
   21         | statement error

   22 declaration: IDENT COMMA declaration
   23            | IDENT COLON array
   24            | IDENT error
   25            | error

   26 array: INTEGER
   27      | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   28 statement: var ASSIGN expression
   29          | IF boolexpr THEN if
   30          | WHILE boolexpr BEGINLOOP while
   31          | DO BEGINLOOP dowhile
   32          | READ rwfunc
   33          | WRITE rwfunc
   34          | READ var
   35          | WRITE var
   36          | BREAK
   37          | RETURN expression
   38          | var error
   39          | var ASSIGN error
   40          | IF boolexpr error
   41          | WHILE boolexpr error
   42          | WHILE boolexpr BEGINLOOP error
   43          | DO error
   44          | READ error
   45          | WRITE error
   46          | RETURN error
   47          | WHILE error

   48 if: statement SEMICOLON if
   49   | ELSE statement SEMICOLON if
   50   | ENDIF
   51   | statement error
   52   | error

   53 while: statement SEMICOLON while
   54      | ENDLOOP
   55      | statement error
   56      | statement SEMICOLON error

   57 dowhile: statement SEMICOLON dowhile
   58        | ENDLOOP WHILE boolexpr
   59        | statement error
   60        | error
   61        | ENDLOOP error
   62        | ENDLOOP WHILE error

   63 rwfunc: var COMMA rwfunc
   64       | var COMMA var

   65 boolexpr: relandexpr
   66         | relandexpr boolexpr2

   67 boolexpr2: OR relandexpr boolexpr2
   68          | OR relandexpr

   69 relandexpr: relexpr
   70           | relexpr relandexpr2

   71 relandexpr2: AND relexpr relandexpr2
   72            | AND relexpr

   73 relexpr: NOT relexpr2
   74        | relexpr2

   75 relexpr2: expression comp expression
   76         | TRUE
   77         | FALSE
   78         | L_PAREN boolexpr R_PAREN
   79         | expression error

   80 comp: EQ
   81     | NEQ
   82     | LT
   83     | GT
   84     | LTE
   85     | GTE
   86     | error

   87 expression: multexpr
   88           | multexpr ADD expression
   89           | multexpr SUB expression

   90 multexpr: term
   91         | term MULT multexpr
   92         | term DIV multexpr
   93         | term MOD multexpr

   94 term: term1
   95     | SUB term1
   96     | term2

   97 term1: var
   98      | NUMBER
   99      | L_PAREN expression R_PAREN

  100 term2: IDENT L_PAREN term3 R_PAREN

  101 term3: %empty
  102      | expression
  103      | expression COMMA term3

  104 var: IDENT
  105    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 4 5 6 7 8 11 12 13 16 17 20 21 24 25 38 39 40 41 42 43
    44 45 46 47 51 52 55 56 59 60 61 62 79 86
SEMICOLON (258) 3 4 5 9 14 18 19 20 48 49 53 56 57
COLON (259) 23
COMMA (260) 22 63 64 103
L_PAREN (261) 78 99 100
R_PAREN (262) 78 99 100
L_SQUARE_BRACKET (263) 27 105
R_SQUARE_BRACKET (264) 27 105
ASSIGN (265) 28 39
EQ (266) 80
NEQ (267) 81
LT (268) 82
GT (269) 83
LTE (270) 84
GTE (271) 85
SUB (272) 89 95
ADD (273) 88
MULT (274) 91
DIV (275) 92
MOD (276) 93
FUNCTION (277) 3 4 5 6 7
BEGIN_PARAMS (278) 3 4
END_PARAMS (279) 10 12 13
BEGIN_LOCALS (280) 10 13
END_LOCALS (281) 15 17
BEGIN_BODY (282) 15
END_BODY (283) 18
ARRAY (284) 27
OF (285) 27
IF (286) 29 40
THEN (287) 29
ENDIF (288) 50
ELSE (289) 49
WHILE (290) 30 41 42 47 58 62
DO (291) 31 43
BEGINLOOP (292) 30 31 42
ENDLOOP (293) 54 58 61 62
BREAK (294) 36
READ (295) 32 34 44
WRITE (296) 33 35 45
AND (297) 71 72
OR (298) 67 68
NOT (299) 73
TRUE (300) 76
FALSE (301) 77
RETURN (302) 37 46
NUMBER (303) 27 98
INTEGER (304) 26 27
IDENT (305) 3 4 5 6 22 23 24 100 104 105


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 2
function (53)
    on left: 3 4 5 6 7 8, on right: 2
funcparams (54)
    on left: 9 10 11 12 13, on right: 3 9
funclocals (55)
    on left: 14 15 16 17, on right: 10 14
funcbody (56)
    on left: 18 19 20 21, on right: 15 19
declaration (57)
    on left: 22 23 24 25, on right: 9 11 14 16 22
array (58)
    on left: 26 27, on right: 23
statement (59)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
    46 47, on right: 18 19 20 21 48 49 51 53 55 56 57 59
if (60)
    on left: 48 49 50 51 52, on right: 29 48 49
while (61)
    on left: 53 54 55 56, on right: 30 53
dowhile (62)
    on left: 57 58 59 60 61 62, on right: 31 57
rwfunc (63)
    on left: 63 64, on right: 32 33 63
boolexpr (64)
    on left: 65 66, on right: 29 30 40 41 42 58 78
boolexpr2 (65)
    on left: 67 68, on right: 66 67
relandexpr (66)
    on left: 69 70, on right: 65 66 67 68
relandexpr2 (67)
    on left: 71 72, on right: 70 71
relexpr (68)
    on left: 73 74, on right: 69 70 71 72
relexpr2 (69)
    on left: 75 76 77 78 79, on right: 73 74
comp (70)
    on left: 80 81 82 83 84 85 86, on right: 75
expression (71)
    on left: 87 88 89, on right: 28 37 75 79 88 89 99 102 103 105
multexpr (72)
    on left: 90 91 92 93, on right: 87 88 89 91 92 93
term (73)
    on left: 94 95 96, on right: 90 91 92 93
term1 (74)
    on left: 97 98 99, on right: 94 95
term2 (75)
    on left: 100, on right: 96
term3 (76)
    on left: 101 102 103, on right: 100 103
var (77)
    on left: 104 105, on right: 28 34 35 38 39 63 64 97


State 0

    0 $accept: . program $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 1 (program)

    program   go to state 3
    function  go to state 4


State 1

    8 function: error .

    $default  reduce using rule 8 (function)


State 2

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS funcparams
    4         | FUNCTION . IDENT SEMICOLON BEGIN_PARAMS error
    5         | FUNCTION . IDENT SEMICOLON error
    6         | FUNCTION . IDENT error
    7         | FUNCTION . error

    error  shift, and go to state 5
    IDENT  shift, and go to state 6


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    2 program: function . program

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 1 (program)

    program   go to state 8
    function  go to state 4


State 5

    7 function: FUNCTION error .

    $default  reduce using rule 7 (function)


State 6

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS funcparams
    4         | FUNCTION IDENT . SEMICOLON BEGIN_PARAMS error
    5         | FUNCTION IDENT . SEMICOLON error
    6         | FUNCTION IDENT . error

    error      shift, and go to state 9
    SEMICOLON  shift, and go to state 10


State 7

    0 $accept: program $end .

    $default  accept


State 8

    2 program: function program .

    $default  reduce using rule 2 (program)


State 9

    6 function: FUNCTION IDENT error .

    $default  reduce using rule 6 (function)


State 10

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS funcparams
    4         | FUNCTION IDENT SEMICOLON . BEGIN_PARAMS error
    5         | FUNCTION IDENT SEMICOLON . error

    error         shift, and go to state 11
    BEGIN_PARAMS  shift, and go to state 12


State 11

    5 function: FUNCTION IDENT SEMICOLON error .

    $default  reduce using rule 5 (function)


State 12

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . funcparams
    4         | FUNCTION IDENT SEMICOLON BEGIN_PARAMS . error

    error       shift, and go to state 13
    END_PARAMS  shift, and go to state 14
    IDENT       shift, and go to state 15

    funcparams   go to state 16
    declaration  go to state 17


State 13

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS error .
   25 declaration: error .

    error      reduce using rule 4 (function)
    error      [reduce using rule 25 (declaration)]
    SEMICOLON  reduce using rule 25 (declaration)
    $default   reduce using rule 4 (function)


State 14

   10 funcparams: END_PARAMS . BEGIN_LOCALS funclocals
   12           | END_PARAMS . error
   13           | END_PARAMS . BEGIN_LOCALS error

    error         shift, and go to state 18
    BEGIN_LOCALS  shift, and go to state 19


State 15

   22 declaration: IDENT . COMMA declaration
   23            | IDENT . COLON array
   24            | IDENT . error

    error  shift, and go to state 20
    COLON  shift, and go to state 21
    COMMA  shift, and go to state 22


State 16

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams .

    $default  reduce using rule 3 (function)


State 17

    9 funcparams: declaration . SEMICOLON funcparams
   11           | declaration . error

    error      shift, and go to state 23
    SEMICOLON  shift, and go to state 24


State 18

   12 funcparams: END_PARAMS error .

    $default  reduce using rule 12 (funcparams)


State 19

   10 funcparams: END_PARAMS BEGIN_LOCALS . funclocals
   13           | END_PARAMS BEGIN_LOCALS . error

    error       shift, and go to state 25
    END_LOCALS  shift, and go to state 26
    IDENT       shift, and go to state 15

    funclocals   go to state 27
    declaration  go to state 28


State 20

   24 declaration: IDENT error .

    $default  reduce using rule 24 (declaration)


State 21

   23 declaration: IDENT COLON . array

    ARRAY    shift, and go to state 29
    INTEGER  shift, and go to state 30

    array  go to state 31


State 22

   22 declaration: IDENT COMMA . declaration

    error  shift, and go to state 32
    IDENT  shift, and go to state 15

    declaration  go to state 33


State 23

   11 funcparams: declaration error .

    $default  reduce using rule 11 (funcparams)


State 24

    9 funcparams: declaration SEMICOLON . funcparams

    error       shift, and go to state 32
    END_PARAMS  shift, and go to state 14
    IDENT       shift, and go to state 15

    funcparams   go to state 34
    declaration  go to state 17


State 25

   13 funcparams: END_PARAMS BEGIN_LOCALS error .
   25 declaration: error .

    error      reduce using rule 13 (funcparams)
    error      [reduce using rule 25 (declaration)]
    SEMICOLON  reduce using rule 25 (declaration)
    $default   reduce using rule 13 (funcparams)


State 26

   15 funclocals: END_LOCALS . BEGIN_BODY funcbody
   17           | END_LOCALS . error

    error       shift, and go to state 35
    BEGIN_BODY  shift, and go to state 36


State 27

   10 funcparams: END_PARAMS BEGIN_LOCALS funclocals .

    $default  reduce using rule 10 (funcparams)


State 28

   14 funclocals: declaration . SEMICOLON funclocals
   16           | declaration . error

    error      shift, and go to state 37
    SEMICOLON  shift, and go to state 38


State 29

   27 array: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 39


State 30

   26 array: INTEGER .

    $default  reduce using rule 26 (array)


State 31

   23 declaration: IDENT COLON array .

    $default  reduce using rule 23 (declaration)


State 32

   25 declaration: error .

    $default  reduce using rule 25 (declaration)


State 33

   22 declaration: IDENT COMMA declaration .

    $default  reduce using rule 22 (declaration)


State 34

    9 funcparams: declaration SEMICOLON funcparams .

    $default  reduce using rule 9 (funcparams)


State 35

   17 funclocals: END_LOCALS error .

    $default  reduce using rule 17 (funclocals)


State 36

   15 funclocals: END_LOCALS BEGIN_BODY . funcbody

    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    DO      shift, and go to state 42
    BREAK   shift, and go to state 43
    READ    shift, and go to state 44
    WRITE   shift, and go to state 45
    RETURN  shift, and go to state 46
    IDENT   shift, and go to state 47

    funcbody   go to state 48
    statement  go to state 49
    var        go to state 50


State 37

   16 funclocals: declaration error .

    $default  reduce using rule 16 (funclocals)


State 38

   14 funclocals: declaration SEMICOLON . funclocals

    error       shift, and go to state 32
    END_LOCALS  shift, and go to state 26
    IDENT       shift, and go to state 15

    funclocals   go to state 51
    declaration  go to state 28


State 39

   27 array: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 52


State 40

   29 statement: IF . boolexpr THEN if
   40          | IF . boolexpr error

    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    boolexpr    go to state 60
    relandexpr  go to state 61
    relexpr     go to state 62
    relexpr2    go to state 63
    expression  go to state 64
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 41

   30 statement: WHILE . boolexpr BEGINLOOP while
   41          | WHILE . boolexpr error
   42          | WHILE . boolexpr BEGINLOOP error
   47          | WHILE . error

    error    shift, and go to state 70
    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    boolexpr    go to state 71
    relandexpr  go to state 61
    relexpr     go to state 62
    relexpr2    go to state 63
    expression  go to state 64
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 42

   31 statement: DO . BEGINLOOP dowhile
   43          | DO . error

    error      shift, and go to state 72
    BEGINLOOP  shift, and go to state 73


State 43

   36 statement: BREAK .

    $default  reduce using rule 36 (statement)


State 44

   32 statement: READ . rwfunc
   34          | READ . var
   44          | READ . error

    error  shift, and go to state 74
    IDENT  shift, and go to state 47

    rwfunc  go to state 75
    var     go to state 76


State 45

   33 statement: WRITE . rwfunc
   35          | WRITE . var
   45          | WRITE . error

    error  shift, and go to state 77
    IDENT  shift, and go to state 47

    rwfunc  go to state 78
    var     go to state 79


State 46

   37 statement: RETURN . expression
   46          | RETURN . error

    error    shift, and go to state 80
    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    expression  go to state 82
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 47

  104 var: IDENT .
  105    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 83

    $default  reduce using rule 104 (var)


State 48

   15 funclocals: END_LOCALS BEGIN_BODY funcbody .

    $default  reduce using rule 15 (funclocals)


State 49

   18 funcbody: statement . SEMICOLON END_BODY
   19         | statement . SEMICOLON funcbody
   20         | statement . SEMICOLON error
   21         | statement . error

    error      shift, and go to state 84
    SEMICOLON  shift, and go to state 85


State 50

   28 statement: var . ASSIGN expression
   38          | var . error
   39          | var . ASSIGN error

    error   shift, and go to state 86
    ASSIGN  shift, and go to state 87


State 51

   14 funclocals: declaration SEMICOLON funclocals .

    $default  reduce using rule 14 (funclocals)


State 52

   27 array: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 88


State 53

   78 relexpr2: L_PAREN . boolexpr R_PAREN
   99 term1: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    boolexpr    go to state 89
    relandexpr  go to state 61
    relexpr     go to state 62
    relexpr2    go to state 63
    expression  go to state 90
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 54

   95 term: SUB . term1

    L_PAREN  shift, and go to state 81
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 47

    term1  go to state 91
    var    go to state 69


State 55

   73 relexpr: NOT . relexpr2

    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 54
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    relexpr2    go to state 92
    expression  go to state 64
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 56

   76 relexpr2: TRUE .

    $default  reduce using rule 76 (relexpr2)


State 57

   77 relexpr2: FALSE .

    $default  reduce using rule 77 (relexpr2)


State 58

   98 term1: NUMBER .

    $default  reduce using rule 98 (term1)


State 59

  100 term2: IDENT . L_PAREN term3 R_PAREN
  104 var: IDENT .
  105    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 93
    L_SQUARE_BRACKET  shift, and go to state 83

    $default  reduce using rule 104 (var)


State 60

   29 statement: IF boolexpr . THEN if
   40          | IF boolexpr . error

    error  shift, and go to state 94
    THEN   shift, and go to state 95


State 61

   65 boolexpr: relandexpr .
   66         | relandexpr . boolexpr2

    OR  shift, and go to state 96

    $default  reduce using rule 65 (boolexpr)

    boolexpr2  go to state 97


State 62

   69 relandexpr: relexpr .
   70           | relexpr . relandexpr2

    AND  shift, and go to state 98

    $default  reduce using rule 69 (relandexpr)

    relandexpr2  go to state 99


State 63

   74 relexpr: relexpr2 .

    $default  reduce using rule 74 (relexpr)


State 64

   75 relexpr2: expression . comp expression
   79         | expression . error

    error  shift, and go to state 100
    EQ     shift, and go to state 101
    NEQ    shift, and go to state 102
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    LTE    shift, and go to state 105
    GTE    shift, and go to state 106

    comp  go to state 107


State 65

   87 expression: multexpr .
   88           | multexpr . ADD expression
   89           | multexpr . SUB expression

    SUB  shift, and go to state 108
    ADD  shift, and go to state 109

    $default  reduce using rule 87 (expression)


State 66

   90 multexpr: term .
   91         | term . MULT multexpr
   92         | term . DIV multexpr
   93         | term . MOD multexpr

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 90 (multexpr)


State 67

   94 term: term1 .

    $default  reduce using rule 94 (term)


State 68

   96 term: term2 .

    $default  reduce using rule 96 (term)


State 69

   97 term1: var .

    $default  reduce using rule 97 (term1)


State 70

   47 statement: WHILE error .

    $default  reduce using rule 47 (statement)


State 71

   30 statement: WHILE boolexpr . BEGINLOOP while
   41          | WHILE boolexpr . error
   42          | WHILE boolexpr . BEGINLOOP error

    error      shift, and go to state 113
    BEGINLOOP  shift, and go to state 114


State 72

   43 statement: DO error .

    $default  reduce using rule 43 (statement)


State 73

   31 statement: DO BEGINLOOP . dowhile

    error    shift, and go to state 115
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    DO       shift, and go to state 42
    ENDLOOP  shift, and go to state 116
    BREAK    shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    RETURN   shift, and go to state 46
    IDENT    shift, and go to state 47

    statement  go to state 117
    dowhile    go to state 118
    var        go to state 50


State 74

   44 statement: READ error .

    $default  reduce using rule 44 (statement)


State 75

   32 statement: READ rwfunc .

    $default  reduce using rule 32 (statement)


State 76

   34 statement: READ var .
   63 rwfunc: var . COMMA rwfunc
   64       | var . COMMA var

    COMMA  shift, and go to state 119

    $default  reduce using rule 34 (statement)


State 77

   45 statement: WRITE error .

    $default  reduce using rule 45 (statement)


State 78

   33 statement: WRITE rwfunc .

    $default  reduce using rule 33 (statement)


State 79

   35 statement: WRITE var .
   63 rwfunc: var . COMMA rwfunc
   64       | var . COMMA var

    COMMA  shift, and go to state 119

    $default  reduce using rule 35 (statement)


State 80

   46 statement: RETURN error .

    $default  reduce using rule 46 (statement)


State 81

   99 term1: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    expression  go to state 120
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 82

   37 statement: RETURN expression .

    $default  reduce using rule 37 (statement)


State 83

  105 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    expression  go to state 121
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 84

   21 funcbody: statement error .

    $default  reduce using rule 21 (funcbody)


State 85

   18 funcbody: statement SEMICOLON . END_BODY
   19         | statement SEMICOLON . funcbody
   20         | statement SEMICOLON . error

    error     shift, and go to state 122
    END_BODY  shift, and go to state 123
    IF        shift, and go to state 40
    WHILE     shift, and go to state 41
    DO        shift, and go to state 42
    BREAK     shift, and go to state 43
    READ      shift, and go to state 44
    WRITE     shift, and go to state 45
    RETURN    shift, and go to state 46
    IDENT     shift, and go to state 47

    funcbody   go to state 124
    statement  go to state 49
    var        go to state 50


State 86

   38 statement: var error .

    $default  reduce using rule 38 (statement)


State 87

   28 statement: var ASSIGN . expression
   39          | var ASSIGN . error

    error    shift, and go to state 125
    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    expression  go to state 126
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 88

   27 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 127


State 89

   78 relexpr2: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 128


State 90

   75 relexpr2: expression . comp expression
   79         | expression . error
   99 term1: L_PAREN expression . R_PAREN

    error    shift, and go to state 100
    R_PAREN  shift, and go to state 129
    EQ       shift, and go to state 101
    NEQ      shift, and go to state 102
    LT       shift, and go to state 103
    GT       shift, and go to state 104
    LTE      shift, and go to state 105
    GTE      shift, and go to state 106

    comp  go to state 107


State 91

   95 term: SUB term1 .

    $default  reduce using rule 95 (term)


State 92

   73 relexpr: NOT relexpr2 .

    $default  reduce using rule 73 (relexpr)


State 93

  100 term2: IDENT L_PAREN . term3 R_PAREN

    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    $default  reduce using rule 101 (term3)

    expression  go to state 130
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    term3       go to state 131
    var         go to state 69


State 94

   40 statement: IF boolexpr error .

    $default  reduce using rule 40 (statement)


State 95

   29 statement: IF boolexpr THEN . if

    error   shift, and go to state 132
    IF      shift, and go to state 40
    ENDIF   shift, and go to state 133
    ELSE    shift, and go to state 134
    WHILE   shift, and go to state 41
    DO      shift, and go to state 42
    BREAK   shift, and go to state 43
    READ    shift, and go to state 44
    WRITE   shift, and go to state 45
    RETURN  shift, and go to state 46
    IDENT   shift, and go to state 47

    statement  go to state 135
    if         go to state 136
    var        go to state 50


State 96

   67 boolexpr2: OR . relandexpr boolexpr2
   68          | OR . relandexpr

    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    relandexpr  go to state 137
    relexpr     go to state 62
    relexpr2    go to state 63
    expression  go to state 64
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 97

   66 boolexpr: relandexpr boolexpr2 .

    $default  reduce using rule 66 (boolexpr)


State 98

   71 relandexpr2: AND . relexpr relandexpr2
   72            | AND . relexpr

    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    relexpr     go to state 138
    relexpr2    go to state 63
    expression  go to state 64
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 99

   70 relandexpr: relexpr relandexpr2 .

    $default  reduce using rule 70 (relandexpr)


State 100

   79 relexpr2: expression error .
   86 comp: error .

    L_PAREN   reduce using rule 86 (comp)
    SUB       reduce using rule 86 (comp)
    NUMBER    reduce using rule 86 (comp)
    IDENT     reduce using rule 86 (comp)
    $default  reduce using rule 79 (relexpr2)


State 101

   80 comp: EQ .

    $default  reduce using rule 80 (comp)


State 102

   81 comp: NEQ .

    $default  reduce using rule 81 (comp)


State 103

   82 comp: LT .

    $default  reduce using rule 82 (comp)


State 104

   83 comp: GT .

    $default  reduce using rule 83 (comp)


State 105

   84 comp: LTE .

    $default  reduce using rule 84 (comp)


State 106

   85 comp: GTE .

    $default  reduce using rule 85 (comp)


State 107

   75 relexpr2: expression comp . expression

    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    expression  go to state 139
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 108

   89 expression: multexpr SUB . expression

    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    expression  go to state 140
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 109

   88 expression: multexpr ADD . expression

    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    expression  go to state 141
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 110

   91 multexpr: term MULT . multexpr

    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    multexpr  go to state 142
    term      go to state 66
    term1     go to state 67
    term2     go to state 68
    var       go to state 69


State 111

   92 multexpr: term DIV . multexpr

    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    multexpr  go to state 143
    term      go to state 66
    term1     go to state 67
    term2     go to state 68
    var       go to state 69


State 112

   93 multexpr: term MOD . multexpr

    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    multexpr  go to state 144
    term      go to state 66
    term1     go to state 67
    term2     go to state 68
    var       go to state 69


State 113

   41 statement: WHILE boolexpr error .

    $default  reduce using rule 41 (statement)


State 114

   30 statement: WHILE boolexpr BEGINLOOP . while
   42          | WHILE boolexpr BEGINLOOP . error

    error    shift, and go to state 145
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    DO       shift, and go to state 42
    ENDLOOP  shift, and go to state 146
    BREAK    shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    RETURN   shift, and go to state 46
    IDENT    shift, and go to state 47

    statement  go to state 147
    while      go to state 148
    var        go to state 50


State 115

   60 dowhile: error .

    $default  reduce using rule 60 (dowhile)


State 116

   58 dowhile: ENDLOOP . WHILE boolexpr
   61        | ENDLOOP . error
   62        | ENDLOOP . WHILE error

    error  shift, and go to state 149
    WHILE  shift, and go to state 150


State 117

   57 dowhile: statement . SEMICOLON dowhile
   59        | statement . error

    error      shift, and go to state 151
    SEMICOLON  shift, and go to state 152


State 118

   31 statement: DO BEGINLOOP dowhile .

    $default  reduce using rule 31 (statement)


State 119

   63 rwfunc: var COMMA . rwfunc
   64       | var COMMA . var

    IDENT  shift, and go to state 47

    rwfunc  go to state 153
    var     go to state 154


State 120

   99 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 129


State 121

  105 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 155


State 122

   20 funcbody: statement SEMICOLON error .

    $default  reduce using rule 20 (funcbody)


State 123

   18 funcbody: statement SEMICOLON END_BODY .

    $default  reduce using rule 18 (funcbody)


State 124

   19 funcbody: statement SEMICOLON funcbody .

    $default  reduce using rule 19 (funcbody)


State 125

   39 statement: var ASSIGN error .

    $default  reduce using rule 39 (statement)


State 126

   28 statement: var ASSIGN expression .

    $default  reduce using rule 28 (statement)


State 127

   27 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 156


State 128

   78 relexpr2: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 78 (relexpr2)


State 129

   99 term1: L_PAREN expression R_PAREN .

    $default  reduce using rule 99 (term1)


State 130

  102 term3: expression .
  103      | expression . COMMA term3

    COMMA  shift, and go to state 157

    $default  reduce using rule 102 (term3)


State 131

  100 term2: IDENT L_PAREN term3 . R_PAREN

    R_PAREN  shift, and go to state 158


State 132

   52 if: error .

    $default  reduce using rule 52 (if)


State 133

   50 if: ENDIF .

    $default  reduce using rule 50 (if)


State 134

   49 if: ELSE . statement SEMICOLON if

    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    DO      shift, and go to state 42
    BREAK   shift, and go to state 43
    READ    shift, and go to state 44
    WRITE   shift, and go to state 45
    RETURN  shift, and go to state 46
    IDENT   shift, and go to state 47

    statement  go to state 159
    var        go to state 50


State 135

   48 if: statement . SEMICOLON if
   51   | statement . error

    error      shift, and go to state 160
    SEMICOLON  shift, and go to state 161


State 136

   29 statement: IF boolexpr THEN if .

    $default  reduce using rule 29 (statement)


State 137

   67 boolexpr2: OR relandexpr . boolexpr2
   68          | OR relandexpr .

    OR  shift, and go to state 96

    $default  reduce using rule 68 (boolexpr2)

    boolexpr2  go to state 162


State 138

   71 relandexpr2: AND relexpr . relandexpr2
   72            | AND relexpr .

    AND  shift, and go to state 98

    $default  reduce using rule 72 (relandexpr2)

    relandexpr2  go to state 163


State 139

   75 relexpr2: expression comp expression .

    $default  reduce using rule 75 (relexpr2)


State 140

   89 expression: multexpr SUB expression .

    $default  reduce using rule 89 (expression)


State 141

   88 expression: multexpr ADD expression .

    $default  reduce using rule 88 (expression)


State 142

   91 multexpr: term MULT multexpr .

    $default  reduce using rule 91 (multexpr)


State 143

   92 multexpr: term DIV multexpr .

    $default  reduce using rule 92 (multexpr)


State 144

   93 multexpr: term MOD multexpr .

    $default  reduce using rule 93 (multexpr)


State 145

   42 statement: WHILE boolexpr BEGINLOOP error .

    $default  reduce using rule 42 (statement)


State 146

   54 while: ENDLOOP .

    $default  reduce using rule 54 (while)


State 147

   53 while: statement . SEMICOLON while
   55      | statement . error
   56      | statement . SEMICOLON error

    error      shift, and go to state 164
    SEMICOLON  shift, and go to state 165


State 148

   30 statement: WHILE boolexpr BEGINLOOP while .

    $default  reduce using rule 30 (statement)


State 149

   61 dowhile: ENDLOOP error .

    $default  reduce using rule 61 (dowhile)


State 150

   58 dowhile: ENDLOOP WHILE . boolexpr
   62        | ENDLOOP WHILE . error

    error    shift, and go to state 166
    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55
    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    boolexpr    go to state 167
    relandexpr  go to state 61
    relexpr     go to state 62
    relexpr2    go to state 63
    expression  go to state 64
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    var         go to state 69


State 151

   59 dowhile: statement error .

    $default  reduce using rule 59 (dowhile)


State 152

   57 dowhile: statement SEMICOLON . dowhile

    error    shift, and go to state 115
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    DO       shift, and go to state 42
    ENDLOOP  shift, and go to state 116
    BREAK    shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    RETURN   shift, and go to state 46
    IDENT    shift, and go to state 47

    statement  go to state 117
    dowhile    go to state 168
    var        go to state 50


State 153

   63 rwfunc: var COMMA rwfunc .

    $default  reduce using rule 63 (rwfunc)


State 154

   63 rwfunc: var . COMMA rwfunc
   64       | var . COMMA var
   64       | var COMMA var .

    COMMA  shift, and go to state 119

    $default  reduce using rule 64 (rwfunc)


State 155

  105 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 105 (var)


State 156

   27 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 27 (array)


State 157

  103 term3: expression COMMA . term3

    L_PAREN  shift, and go to state 81
    SUB      shift, and go to state 54
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    $default  reduce using rule 101 (term3)

    expression  go to state 130
    multexpr    go to state 65
    term        go to state 66
    term1       go to state 67
    term2       go to state 68
    term3       go to state 169
    var         go to state 69


State 158

  100 term2: IDENT L_PAREN term3 R_PAREN .

    $default  reduce using rule 100 (term2)


State 159

   49 if: ELSE statement . SEMICOLON if

    SEMICOLON  shift, and go to state 170


State 160

   51 if: statement error .

    $default  reduce using rule 51 (if)


State 161

   48 if: statement SEMICOLON . if

    error   shift, and go to state 132
    IF      shift, and go to state 40
    ENDIF   shift, and go to state 133
    ELSE    shift, and go to state 134
    WHILE   shift, and go to state 41
    DO      shift, and go to state 42
    BREAK   shift, and go to state 43
    READ    shift, and go to state 44
    WRITE   shift, and go to state 45
    RETURN  shift, and go to state 46
    IDENT   shift, and go to state 47

    statement  go to state 135
    if         go to state 171
    var        go to state 50


State 162

   67 boolexpr2: OR relandexpr boolexpr2 .

    $default  reduce using rule 67 (boolexpr2)


State 163

   71 relandexpr2: AND relexpr relandexpr2 .

    $default  reduce using rule 71 (relandexpr2)


State 164

   55 while: statement error .

    $default  reduce using rule 55 (while)


State 165

   53 while: statement SEMICOLON . while
   56      | statement SEMICOLON . error

    error    shift, and go to state 172
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    DO       shift, and go to state 42
    ENDLOOP  shift, and go to state 146
    BREAK    shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    RETURN   shift, and go to state 46
    IDENT    shift, and go to state 47

    statement  go to state 147
    while      go to state 173
    var        go to state 50


State 166

   62 dowhile: ENDLOOP WHILE error .

    $default  reduce using rule 62 (dowhile)


State 167

   58 dowhile: ENDLOOP WHILE boolexpr .

    $default  reduce using rule 58 (dowhile)


State 168

   57 dowhile: statement SEMICOLON dowhile .

    $default  reduce using rule 57 (dowhile)


State 169

  103 term3: expression COMMA term3 .

    $default  reduce using rule 103 (term3)


State 170

   49 if: ELSE statement SEMICOLON . if

    error   shift, and go to state 132
    IF      shift, and go to state 40
    ENDIF   shift, and go to state 133
    ELSE    shift, and go to state 134
    WHILE   shift, and go to state 41
    DO      shift, and go to state 42
    BREAK   shift, and go to state 43
    READ    shift, and go to state 44
    WRITE   shift, and go to state 45
    RETURN  shift, and go to state 46
    IDENT   shift, and go to state 47

    statement  go to state 135
    if         go to state 174
    var        go to state 50


State 171

   48 if: statement SEMICOLON if .

    $default  reduce using rule 48 (if)


State 172

   56 while: statement SEMICOLON error .

    $default  reduce using rule 56 (while)


State 173

   53 while: statement SEMICOLON while .

    $default  reduce using rule 53 (while)


State 174

   49 if: ELSE statement SEMICOLON if .

    $default  reduce using rule 49 (if)
