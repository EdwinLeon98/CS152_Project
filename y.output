Grammar

    0 $accept: program $end

    1 program: %empty
    2        | function program

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams
    4         | FUNCTION IDENT SEMICOLON BEGIN_PARAMS error
    5         | FUNCTION IDENT SEMICOLON error
    6         | FUNCTION IDENT error
    7         | FUNCTION error

    8 funcparams: declaration SEMICOLON funcparams
    9           | END_PARAMS BEGIN_LOCALS funclocals
   10           | declaration error
   11           | END_PARAMS error
   12           | END_PARAMS BEGIN_LOCALS error

   13 funclocals: declaration SEMICOLON funclocals
   14           | END_LOCALS BEGIN_BODY funcbody
   15           | declaration error
   16           | END_LOCALS error

   17 funcbody: statement SEMICOLON END_BODY
   18         | statement SEMICOLON funcbody
   19         | statement SEMICOLON error
   20         | statement error

   21 declaration: IDENT COMMA declaration
   22            | IDENT COLON array
   23            | IDENT error
   24            | error

   25 array: INTEGER
   26      | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   27 statement: var ASSIGN expression
   28          | IF boolexpr THEN if
   29          | WHILE boolexpr BEGINLOOP while
   30          | DO BEGINLOOP dowhile
   31          | READ rwfunc
   32          | WRITE rwfunc
   33          | READ var
   34          | WRITE var
   35          | BREAK
   36          | RETURN expression
   37          | var error
   38          | var ASSIGN error
   39          | IF boolexpr error
   40          | WHILE boolexpr error
   41          | WHILE boolexpr BEGINLOOP error
   42          | DO error
   43          | READ error
   44          | WRITE error
   45          | RETURN error
   46          | WHILE error

   47 if: statement SEMICOLON if
   48   | ELSE statement SEMICOLON if
   49   | ENDIF
   50   | statement error
   51   | error

   52 while: statement SEMICOLON while
   53      | ENDLOOP
   54      | statement error
   55      | statement SEMICOLON error

   56 dowhile: statement SEMICOLON dowhile
   57        | ENDLOOP WHILE boolexpr
   58        | statement error
   59        | error
   60        | ENDLOOP error
   61        | ENDLOOP WHILE error

   62 rwfunc: var COMMA rwfunc
   63       | var COMMA var

   64 boolexpr: relandexpr
   65         | relandexpr boolexpr2

   66 boolexpr2: OR relandexpr boolexpr2
   67          | OR relandexpr

   68 relandexpr: relexpr
   69           | relexpr relandexpr2

   70 relandexpr2: AND relexpr relandexpr2
   71            | AND relexpr

   72 relexpr: NOT relexpr2
   73        | relexpr2

   74 relexpr2: expression comp expression
   75         | TRUE
   76         | FALSE
   77         | L_PAREN boolexpr R_PAREN
   78         | expression error

   79 comp: EQ
   80     | NEQ
   81     | LT
   82     | GT
   83     | LTE
   84     | GTE
   85     | error

   86 expression: multexpr
   87           | multexpr ADD expression
   88           | multexpr SUB expression

   89 multexpr: term
   90         | term MULT multexpr
   91         | term DIV multexpr
   92         | term MOD multexpr

   93 term: term1
   94     | SUB term1
   95     | term2

   96 term1: var
   97      | NUMBER
   98      | L_PAREN expression R_PAREN

   99 term2: IDENT L_PAREN term3 R_PAREN

  100 term3: %empty
  101      | expression
  102      | expression COMMA term3

  103 var: IDENT
  104    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 4 5 6 7 10 11 12 15 16 19 20 23 24 37 38 39 40 41 42 43
    44 45 46 50 51 54 55 58 59 60 61 78 85
SEMICOLON (258) 3 4 5 8 13 17 18 19 47 48 52 55 56
COLON (259) 22
COMMA (260) 21 62 63 102
L_PAREN (261) 77 98 99
R_PAREN (262) 77 98 99
L_SQUARE_BRACKET (263) 26 104
R_SQUARE_BRACKET (264) 26 104
ASSIGN (265) 27 38
EQ (266) 79
NEQ (267) 80
LT (268) 81
GT (269) 82
LTE (270) 83
GTE (271) 84
SUB (272) 88 94
ADD (273) 87
MULT (274) 90
DIV (275) 91
MOD (276) 92
FUNCTION (277) 3 4 5 6 7
BEGIN_PARAMS (278) 3 4
END_PARAMS (279) 9 11 12
BEGIN_LOCALS (280) 9 12
END_LOCALS (281) 14 16
BEGIN_BODY (282) 14
END_BODY (283) 17
ARRAY (284) 26
OF (285) 26
IF (286) 28 39
THEN (287) 28
ENDIF (288) 49
ELSE (289) 48
WHILE (290) 29 40 41 46 57 61
DO (291) 30 42
BEGINLOOP (292) 29 30 41
ENDLOOP (293) 53 57 60 61
BREAK (294) 35
READ (295) 31 33 43
WRITE (296) 32 34 44
AND (297) 70 71
OR (298) 66 67
NOT (299) 72
TRUE (300) 75
FALSE (301) 76
RETURN (302) 36 45
NUMBER (303) 26 97
INTEGER (304) 25 26
IDENT (305) 3 4 5 6 21 22 23 99 103 104


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 2
function (53)
    on left: 3 4 5 6 7, on right: 2
funcparams (54)
    on left: 8 9 10 11 12, on right: 3 8
funclocals (55)
    on left: 13 14 15 16, on right: 9 13
funcbody (56)
    on left: 17 18 19 20, on right: 14 18
declaration (57)
    on left: 21 22 23 24, on right: 8 10 13 15 21
array (58)
    on left: 25 26, on right: 22
statement (59)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46, on right: 17 18 19 20 47 48 50 52 54 55 56 58
if (60)
    on left: 47 48 49 50 51, on right: 28 47 48
while (61)
    on left: 52 53 54 55, on right: 29 52
dowhile (62)
    on left: 56 57 58 59 60 61, on right: 30 56
rwfunc (63)
    on left: 62 63, on right: 31 32 62
boolexpr (64)
    on left: 64 65, on right: 28 29 39 40 41 57 77
boolexpr2 (65)
    on left: 66 67, on right: 65 66
relandexpr (66)
    on left: 68 69, on right: 64 65 66 67
relandexpr2 (67)
    on left: 70 71, on right: 69 70
relexpr (68)
    on left: 72 73, on right: 68 69 70 71
relexpr2 (69)
    on left: 74 75 76 77 78, on right: 72 73
comp (70)
    on left: 79 80 81 82 83 84 85, on right: 74
expression (71)
    on left: 86 87 88, on right: 27 36 74 78 87 88 98 101 102 104
multexpr (72)
    on left: 89 90 91 92, on right: 86 87 88 90 91 92
term (73)
    on left: 93 94 95, on right: 89 90 91 92
term1 (74)
    on left: 96 97 98, on right: 93 94
term2 (75)
    on left: 99, on right: 95
term3 (76)
    on left: 100 101 102, on right: 99 102
var (77)
    on left: 103 104, on right: 27 33 34 37 38 62 63 96


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS funcparams
    4         | FUNCTION . IDENT SEMICOLON BEGIN_PARAMS error
    5         | FUNCTION . IDENT SEMICOLON error
    6         | FUNCTION . IDENT error
    7         | FUNCTION . error

    error  shift, and go to state 4
    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 7
    function  go to state 3


State 4

    7 function: FUNCTION error .

    $default  reduce using rule 7 (function)


State 5

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS funcparams
    4         | FUNCTION IDENT . SEMICOLON BEGIN_PARAMS error
    5         | FUNCTION IDENT . SEMICOLON error
    6         | FUNCTION IDENT . error

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 program: function program .

    $default  reduce using rule 2 (program)


State 8

    6 function: FUNCTION IDENT error .

    $default  reduce using rule 6 (function)


State 9

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS funcparams
    4         | FUNCTION IDENT SEMICOLON . BEGIN_PARAMS error
    5         | FUNCTION IDENT SEMICOLON . error

    error         shift, and go to state 10
    BEGIN_PARAMS  shift, and go to state 11


State 10

    5 function: FUNCTION IDENT SEMICOLON error .

    $default  reduce using rule 5 (function)


State 11

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . funcparams
    4         | FUNCTION IDENT SEMICOLON BEGIN_PARAMS . error

    error       shift, and go to state 12
    END_PARAMS  shift, and go to state 13
    IDENT       shift, and go to state 14

    funcparams   go to state 15
    declaration  go to state 16


State 12

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS error .
   24 declaration: error .

    error      reduce using rule 24 (declaration)
    SEMICOLON  reduce using rule 24 (declaration)
    $default   reduce using rule 4 (function)


State 13

    9 funcparams: END_PARAMS . BEGIN_LOCALS funclocals
   11           | END_PARAMS . error
   12           | END_PARAMS . BEGIN_LOCALS error

    error         shift, and go to state 17
    BEGIN_LOCALS  shift, and go to state 18


State 14

   21 declaration: IDENT . COMMA declaration
   22            | IDENT . COLON array
   23            | IDENT . error

    error  shift, and go to state 19
    COLON  shift, and go to state 20
    COMMA  shift, and go to state 21


State 15

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS funcparams .

    $default  reduce using rule 3 (function)


State 16

    8 funcparams: declaration . SEMICOLON funcparams
   10           | declaration . error

    error      shift, and go to state 22
    SEMICOLON  shift, and go to state 23


State 17

   11 funcparams: END_PARAMS error .

    $default  reduce using rule 11 (funcparams)


State 18

    9 funcparams: END_PARAMS BEGIN_LOCALS . funclocals
   12           | END_PARAMS BEGIN_LOCALS . error

    error       shift, and go to state 24
    END_LOCALS  shift, and go to state 25
    IDENT       shift, and go to state 14

    funclocals   go to state 26
    declaration  go to state 27


State 19

   23 declaration: IDENT error .

    $default  reduce using rule 23 (declaration)


State 20

   22 declaration: IDENT COLON . array

    ARRAY    shift, and go to state 28
    INTEGER  shift, and go to state 29

    array  go to state 30


State 21

   21 declaration: IDENT COMMA . declaration

    error  shift, and go to state 31
    IDENT  shift, and go to state 14

    declaration  go to state 32


State 22

   10 funcparams: declaration error .

    $default  reduce using rule 10 (funcparams)


State 23

    8 funcparams: declaration SEMICOLON . funcparams

    error       shift, and go to state 31
    END_PARAMS  shift, and go to state 13
    IDENT       shift, and go to state 14

    funcparams   go to state 33
    declaration  go to state 16


State 24

   12 funcparams: END_PARAMS BEGIN_LOCALS error .
   24 declaration: error .

    error      reduce using rule 24 (declaration)
    SEMICOLON  reduce using rule 24 (declaration)
    $default   reduce using rule 12 (funcparams)


State 25

   14 funclocals: END_LOCALS . BEGIN_BODY funcbody
   16           | END_LOCALS . error

    error       shift, and go to state 34
    BEGIN_BODY  shift, and go to state 35


State 26

    9 funcparams: END_PARAMS BEGIN_LOCALS funclocals .

    $default  reduce using rule 9 (funcparams)


State 27

   13 funclocals: declaration . SEMICOLON funclocals
   15           | declaration . error

    error      shift, and go to state 36
    SEMICOLON  shift, and go to state 37


State 28

   26 array: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 38


State 29

   25 array: INTEGER .

    $default  reduce using rule 25 (array)


State 30

   22 declaration: IDENT COLON array .

    $default  reduce using rule 22 (declaration)


State 31

   24 declaration: error .

    $default  reduce using rule 24 (declaration)


State 32

   21 declaration: IDENT COMMA declaration .

    $default  reduce using rule 21 (declaration)


State 33

    8 funcparams: declaration SEMICOLON funcparams .

    $default  reduce using rule 8 (funcparams)


State 34

   16 funclocals: END_LOCALS error .

    $default  reduce using rule 16 (funclocals)


State 35

   14 funclocals: END_LOCALS BEGIN_BODY . funcbody

    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    DO      shift, and go to state 41
    BREAK   shift, and go to state 42
    READ    shift, and go to state 43
    WRITE   shift, and go to state 44
    RETURN  shift, and go to state 45
    IDENT   shift, and go to state 46

    funcbody   go to state 47
    statement  go to state 48
    var        go to state 49


State 36

   15 funclocals: declaration error .

    $default  reduce using rule 15 (funclocals)


State 37

   13 funclocals: declaration SEMICOLON . funclocals

    error       shift, and go to state 31
    END_LOCALS  shift, and go to state 25
    IDENT       shift, and go to state 14

    funclocals   go to state 50
    declaration  go to state 27


State 38

   26 array: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 51


State 39

   28 statement: IF . boolexpr THEN if
   39          | IF . boolexpr error

    L_PAREN  shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    boolexpr    go to state 59
    relandexpr  go to state 60
    relexpr     go to state 61
    relexpr2    go to state 62
    expression  go to state 63
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 40

   29 statement: WHILE . boolexpr BEGINLOOP while
   40          | WHILE . boolexpr error
   41          | WHILE . boolexpr BEGINLOOP error
   46          | WHILE . error

    error    shift, and go to state 69
    L_PAREN  shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    boolexpr    go to state 70
    relandexpr  go to state 60
    relexpr     go to state 61
    relexpr2    go to state 62
    expression  go to state 63
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 41

   30 statement: DO . BEGINLOOP dowhile
   42          | DO . error

    error      shift, and go to state 71
    BEGINLOOP  shift, and go to state 72


State 42

   35 statement: BREAK .

    $default  reduce using rule 35 (statement)


State 43

   31 statement: READ . rwfunc
   33          | READ . var
   43          | READ . error

    error  shift, and go to state 73
    IDENT  shift, and go to state 46

    rwfunc  go to state 74
    var     go to state 75


State 44

   32 statement: WRITE . rwfunc
   34          | WRITE . var
   44          | WRITE . error

    error  shift, and go to state 76
    IDENT  shift, and go to state 46

    rwfunc  go to state 77
    var     go to state 78


State 45

   36 statement: RETURN . expression
   45          | RETURN . error

    error    shift, and go to state 79
    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    expression  go to state 81
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 46

  103 var: IDENT .
  104    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 82

    $default  reduce using rule 103 (var)


State 47

   14 funclocals: END_LOCALS BEGIN_BODY funcbody .

    $default  reduce using rule 14 (funclocals)


State 48

   17 funcbody: statement . SEMICOLON END_BODY
   18         | statement . SEMICOLON funcbody
   19         | statement . SEMICOLON error
   20         | statement . error

    error      shift, and go to state 83
    SEMICOLON  shift, and go to state 84


State 49

   27 statement: var . ASSIGN expression
   37          | var . error
   38          | var . ASSIGN error

    error   shift, and go to state 85
    ASSIGN  shift, and go to state 86


State 50

   13 funclocals: declaration SEMICOLON funclocals .

    $default  reduce using rule 13 (funclocals)


State 51

   26 array: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 87


State 52

   77 relexpr2: L_PAREN . boolexpr R_PAREN
   98 term1: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    boolexpr    go to state 88
    relandexpr  go to state 60
    relexpr     go to state 61
    relexpr2    go to state 62
    expression  go to state 89
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 53

   94 term: SUB . term1

    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 46

    term1  go to state 90
    var    go to state 68


State 54

   72 relexpr: NOT . relexpr2

    L_PAREN  shift, and go to state 52
    SUB      shift, and go to state 53
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    relexpr2    go to state 91
    expression  go to state 63
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 55

   75 relexpr2: TRUE .

    $default  reduce using rule 75 (relexpr2)


State 56

   76 relexpr2: FALSE .

    $default  reduce using rule 76 (relexpr2)


State 57

   97 term1: NUMBER .

    $default  reduce using rule 97 (term1)


State 58

   99 term2: IDENT . L_PAREN term3 R_PAREN
  103 var: IDENT .
  104    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 92
    L_SQUARE_BRACKET  shift, and go to state 82

    $default  reduce using rule 103 (var)


State 59

   28 statement: IF boolexpr . THEN if
   39          | IF boolexpr . error

    error  shift, and go to state 93
    THEN   shift, and go to state 94


State 60

   64 boolexpr: relandexpr .
   65         | relandexpr . boolexpr2

    OR  shift, and go to state 95

    $default  reduce using rule 64 (boolexpr)

    boolexpr2  go to state 96


State 61

   68 relandexpr: relexpr .
   69           | relexpr . relandexpr2

    AND  shift, and go to state 97

    $default  reduce using rule 68 (relandexpr)

    relandexpr2  go to state 98


State 62

   73 relexpr: relexpr2 .

    $default  reduce using rule 73 (relexpr)


State 63

   74 relexpr2: expression . comp expression
   78         | expression . error

    error  shift, and go to state 99
    EQ     shift, and go to state 100
    NEQ    shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    LTE    shift, and go to state 104
    GTE    shift, and go to state 105

    comp  go to state 106


State 64

   86 expression: multexpr .
   87           | multexpr . ADD expression
   88           | multexpr . SUB expression

    SUB  shift, and go to state 107
    ADD  shift, and go to state 108

    $default  reduce using rule 86 (expression)


State 65

   89 multexpr: term .
   90         | term . MULT multexpr
   91         | term . DIV multexpr
   92         | term . MOD multexpr

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 111

    $default  reduce using rule 89 (multexpr)


State 66

   93 term: term1 .

    $default  reduce using rule 93 (term)


State 67

   95 term: term2 .

    $default  reduce using rule 95 (term)


State 68

   96 term1: var .

    $default  reduce using rule 96 (term1)


State 69

   46 statement: WHILE error .

    $default  reduce using rule 46 (statement)


State 70

   29 statement: WHILE boolexpr . BEGINLOOP while
   40          | WHILE boolexpr . error
   41          | WHILE boolexpr . BEGINLOOP error

    error      shift, and go to state 112
    BEGINLOOP  shift, and go to state 113


State 71

   42 statement: DO error .

    $default  reduce using rule 42 (statement)


State 72

   30 statement: DO BEGINLOOP . dowhile

    error    shift, and go to state 114
    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    DO       shift, and go to state 41
    ENDLOOP  shift, and go to state 115
    BREAK    shift, and go to state 42
    READ     shift, and go to state 43
    WRITE    shift, and go to state 44
    RETURN   shift, and go to state 45
    IDENT    shift, and go to state 46

    statement  go to state 116
    dowhile    go to state 117
    var        go to state 49


State 73

   43 statement: READ error .

    $default  reduce using rule 43 (statement)


State 74

   31 statement: READ rwfunc .

    $default  reduce using rule 31 (statement)


State 75

   33 statement: READ var .
   62 rwfunc: var . COMMA rwfunc
   63       | var . COMMA var

    COMMA  shift, and go to state 118

    $default  reduce using rule 33 (statement)


State 76

   44 statement: WRITE error .

    $default  reduce using rule 44 (statement)


State 77

   32 statement: WRITE rwfunc .

    $default  reduce using rule 32 (statement)


State 78

   34 statement: WRITE var .
   62 rwfunc: var . COMMA rwfunc
   63       | var . COMMA var

    COMMA  shift, and go to state 118

    $default  reduce using rule 34 (statement)


State 79

   45 statement: RETURN error .

    $default  reduce using rule 45 (statement)


State 80

   98 term1: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    expression  go to state 119
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 81

   36 statement: RETURN expression .

    $default  reduce using rule 36 (statement)


State 82

  104 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    expression  go to state 120
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 83

   20 funcbody: statement error .

    $default  reduce using rule 20 (funcbody)


State 84

   17 funcbody: statement SEMICOLON . END_BODY
   18         | statement SEMICOLON . funcbody
   19         | statement SEMICOLON . error

    error     shift, and go to state 121
    END_BODY  shift, and go to state 122
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    BREAK     shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45
    IDENT     shift, and go to state 46

    funcbody   go to state 123
    statement  go to state 48
    var        go to state 49


State 85

   37 statement: var error .

    $default  reduce using rule 37 (statement)


State 86

   27 statement: var ASSIGN . expression
   38          | var ASSIGN . error

    error    shift, and go to state 124
    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    expression  go to state 125
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 87

   26 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 126


State 88

   77 relexpr2: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 127


State 89

   74 relexpr2: expression . comp expression
   78         | expression . error
   98 term1: L_PAREN expression . R_PAREN

    error    shift, and go to state 99
    R_PAREN  shift, and go to state 128
    EQ       shift, and go to state 100
    NEQ      shift, and go to state 101
    LT       shift, and go to state 102
    GT       shift, and go to state 103
    LTE      shift, and go to state 104
    GTE      shift, and go to state 105

    comp  go to state 106


State 90

   94 term: SUB term1 .

    $default  reduce using rule 94 (term)


State 91

   72 relexpr: NOT relexpr2 .

    $default  reduce using rule 72 (relexpr)


State 92

   99 term2: IDENT L_PAREN . term3 R_PAREN

    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    $default  reduce using rule 100 (term3)

    expression  go to state 129
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    term3       go to state 130
    var         go to state 68


State 93

   39 statement: IF boolexpr error .

    $default  reduce using rule 39 (statement)


State 94

   28 statement: IF boolexpr THEN . if

    error   shift, and go to state 131
    IF      shift, and go to state 39
    ENDIF   shift, and go to state 132
    ELSE    shift, and go to state 133
    WHILE   shift, and go to state 40
    DO      shift, and go to state 41
    BREAK   shift, and go to state 42
    READ    shift, and go to state 43
    WRITE   shift, and go to state 44
    RETURN  shift, and go to state 45
    IDENT   shift, and go to state 46

    statement  go to state 134
    if         go to state 135
    var        go to state 49


State 95

   66 boolexpr2: OR . relandexpr boolexpr2
   67          | OR . relandexpr

    L_PAREN  shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    relandexpr  go to state 136
    relexpr     go to state 61
    relexpr2    go to state 62
    expression  go to state 63
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 96

   65 boolexpr: relandexpr boolexpr2 .

    $default  reduce using rule 65 (boolexpr)


State 97

   70 relandexpr2: AND . relexpr relandexpr2
   71            | AND . relexpr

    L_PAREN  shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    relexpr     go to state 137
    relexpr2    go to state 62
    expression  go to state 63
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 98

   69 relandexpr: relexpr relandexpr2 .

    $default  reduce using rule 69 (relandexpr)


State 99

   78 relexpr2: expression error .
   85 comp: error .

    L_PAREN   reduce using rule 85 (comp)
    SUB       reduce using rule 85 (comp)
    NUMBER    reduce using rule 85 (comp)
    IDENT     reduce using rule 85 (comp)
    $default  reduce using rule 78 (relexpr2)


State 100

   79 comp: EQ .

    $default  reduce using rule 79 (comp)


State 101

   80 comp: NEQ .

    $default  reduce using rule 80 (comp)


State 102

   81 comp: LT .

    $default  reduce using rule 81 (comp)


State 103

   82 comp: GT .

    $default  reduce using rule 82 (comp)


State 104

   83 comp: LTE .

    $default  reduce using rule 83 (comp)


State 105

   84 comp: GTE .

    $default  reduce using rule 84 (comp)


State 106

   74 relexpr2: expression comp . expression

    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    expression  go to state 138
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 107

   88 expression: multexpr SUB . expression

    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    expression  go to state 139
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 108

   87 expression: multexpr ADD . expression

    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    expression  go to state 140
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 109

   90 multexpr: term MULT . multexpr

    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    multexpr  go to state 141
    term      go to state 65
    term1     go to state 66
    term2     go to state 67
    var       go to state 68


State 110

   91 multexpr: term DIV . multexpr

    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    multexpr  go to state 142
    term      go to state 65
    term1     go to state 66
    term2     go to state 67
    var       go to state 68


State 111

   92 multexpr: term MOD . multexpr

    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    multexpr  go to state 143
    term      go to state 65
    term1     go to state 66
    term2     go to state 67
    var       go to state 68


State 112

   40 statement: WHILE boolexpr error .

    $default  reduce using rule 40 (statement)


State 113

   29 statement: WHILE boolexpr BEGINLOOP . while
   41          | WHILE boolexpr BEGINLOOP . error

    error    shift, and go to state 144
    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    DO       shift, and go to state 41
    ENDLOOP  shift, and go to state 145
    BREAK    shift, and go to state 42
    READ     shift, and go to state 43
    WRITE    shift, and go to state 44
    RETURN   shift, and go to state 45
    IDENT    shift, and go to state 46

    statement  go to state 146
    while      go to state 147
    var        go to state 49


State 114

   59 dowhile: error .

    $default  reduce using rule 59 (dowhile)


State 115

   57 dowhile: ENDLOOP . WHILE boolexpr
   60        | ENDLOOP . error
   61        | ENDLOOP . WHILE error

    error  shift, and go to state 148
    WHILE  shift, and go to state 149


State 116

   56 dowhile: statement . SEMICOLON dowhile
   58        | statement . error

    error      shift, and go to state 150
    SEMICOLON  shift, and go to state 151


State 117

   30 statement: DO BEGINLOOP dowhile .

    $default  reduce using rule 30 (statement)


State 118

   62 rwfunc: var COMMA . rwfunc
   63       | var COMMA . var

    IDENT  shift, and go to state 46

    rwfunc  go to state 152
    var     go to state 153


State 119

   98 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 128


State 120

  104 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 154


State 121

   19 funcbody: statement SEMICOLON error .

    $default  reduce using rule 19 (funcbody)


State 122

   17 funcbody: statement SEMICOLON END_BODY .

    $default  reduce using rule 17 (funcbody)


State 123

   18 funcbody: statement SEMICOLON funcbody .

    $default  reduce using rule 18 (funcbody)


State 124

   38 statement: var ASSIGN error .

    $default  reduce using rule 38 (statement)


State 125

   27 statement: var ASSIGN expression .

    $default  reduce using rule 27 (statement)


State 126

   26 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 155


State 127

   77 relexpr2: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 77 (relexpr2)


State 128

   98 term1: L_PAREN expression R_PAREN .

    $default  reduce using rule 98 (term1)


State 129

  101 term3: expression .
  102      | expression . COMMA term3

    COMMA  shift, and go to state 156

    $default  reduce using rule 101 (term3)


State 130

   99 term2: IDENT L_PAREN term3 . R_PAREN

    R_PAREN  shift, and go to state 157


State 131

   51 if: error .

    $default  reduce using rule 51 (if)


State 132

   49 if: ENDIF .

    $default  reduce using rule 49 (if)


State 133

   48 if: ELSE . statement SEMICOLON if

    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    DO      shift, and go to state 41
    BREAK   shift, and go to state 42
    READ    shift, and go to state 43
    WRITE   shift, and go to state 44
    RETURN  shift, and go to state 45
    IDENT   shift, and go to state 46

    statement  go to state 158
    var        go to state 49


State 134

   47 if: statement . SEMICOLON if
   50   | statement . error

    error      shift, and go to state 159
    SEMICOLON  shift, and go to state 160


State 135

   28 statement: IF boolexpr THEN if .

    $default  reduce using rule 28 (statement)


State 136

   66 boolexpr2: OR relandexpr . boolexpr2
   67          | OR relandexpr .

    OR  shift, and go to state 95

    $default  reduce using rule 67 (boolexpr2)

    boolexpr2  go to state 161


State 137

   70 relandexpr2: AND relexpr . relandexpr2
   71            | AND relexpr .

    AND  shift, and go to state 97

    $default  reduce using rule 71 (relandexpr2)

    relandexpr2  go to state 162


State 138

   74 relexpr2: expression comp expression .

    $default  reduce using rule 74 (relexpr2)


State 139

   88 expression: multexpr SUB expression .

    $default  reduce using rule 88 (expression)


State 140

   87 expression: multexpr ADD expression .

    $default  reduce using rule 87 (expression)


State 141

   90 multexpr: term MULT multexpr .

    $default  reduce using rule 90 (multexpr)


State 142

   91 multexpr: term DIV multexpr .

    $default  reduce using rule 91 (multexpr)


State 143

   92 multexpr: term MOD multexpr .

    $default  reduce using rule 92 (multexpr)


State 144

   41 statement: WHILE boolexpr BEGINLOOP error .

    $default  reduce using rule 41 (statement)


State 145

   53 while: ENDLOOP .

    $default  reduce using rule 53 (while)


State 146

   52 while: statement . SEMICOLON while
   54      | statement . error
   55      | statement . SEMICOLON error

    error      shift, and go to state 163
    SEMICOLON  shift, and go to state 164


State 147

   29 statement: WHILE boolexpr BEGINLOOP while .

    $default  reduce using rule 29 (statement)


State 148

   60 dowhile: ENDLOOP error .

    $default  reduce using rule 60 (dowhile)


State 149

   57 dowhile: ENDLOOP WHILE . boolexpr
   61        | ENDLOOP WHILE . error

    error    shift, and go to state 165
    L_PAREN  shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    boolexpr    go to state 166
    relandexpr  go to state 60
    relexpr     go to state 61
    relexpr2    go to state 62
    expression  go to state 63
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    var         go to state 68


State 150

   58 dowhile: statement error .

    $default  reduce using rule 58 (dowhile)


State 151

   56 dowhile: statement SEMICOLON . dowhile

    error    shift, and go to state 114
    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    DO       shift, and go to state 41
    ENDLOOP  shift, and go to state 115
    BREAK    shift, and go to state 42
    READ     shift, and go to state 43
    WRITE    shift, and go to state 44
    RETURN   shift, and go to state 45
    IDENT    shift, and go to state 46

    statement  go to state 116
    dowhile    go to state 167
    var        go to state 49


State 152

   62 rwfunc: var COMMA rwfunc .

    $default  reduce using rule 62 (rwfunc)


State 153

   62 rwfunc: var . COMMA rwfunc
   63       | var . COMMA var
   63       | var COMMA var .

    COMMA  shift, and go to state 118

    $default  reduce using rule 63 (rwfunc)


State 154

  104 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 104 (var)


State 155

   26 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 26 (array)


State 156

  102 term3: expression COMMA . term3

    L_PAREN  shift, and go to state 80
    SUB      shift, and go to state 53
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58

    $default  reduce using rule 100 (term3)

    expression  go to state 129
    multexpr    go to state 64
    term        go to state 65
    term1       go to state 66
    term2       go to state 67
    term3       go to state 168
    var         go to state 68


State 157

   99 term2: IDENT L_PAREN term3 R_PAREN .

    $default  reduce using rule 99 (term2)


State 158

   48 if: ELSE statement . SEMICOLON if

    SEMICOLON  shift, and go to state 169


State 159

   50 if: statement error .

    $default  reduce using rule 50 (if)


State 160

   47 if: statement SEMICOLON . if

    error   shift, and go to state 131
    IF      shift, and go to state 39
    ENDIF   shift, and go to state 132
    ELSE    shift, and go to state 133
    WHILE   shift, and go to state 40
    DO      shift, and go to state 41
    BREAK   shift, and go to state 42
    READ    shift, and go to state 43
    WRITE   shift, and go to state 44
    RETURN  shift, and go to state 45
    IDENT   shift, and go to state 46

    statement  go to state 134
    if         go to state 170
    var        go to state 49


State 161

   66 boolexpr2: OR relandexpr boolexpr2 .

    $default  reduce using rule 66 (boolexpr2)


State 162

   70 relandexpr2: AND relexpr relandexpr2 .

    $default  reduce using rule 70 (relandexpr2)


State 163

   54 while: statement error .

    $default  reduce using rule 54 (while)


State 164

   52 while: statement SEMICOLON . while
   55      | statement SEMICOLON . error

    error    shift, and go to state 171
    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    DO       shift, and go to state 41
    ENDLOOP  shift, and go to state 145
    BREAK    shift, and go to state 42
    READ     shift, and go to state 43
    WRITE    shift, and go to state 44
    RETURN   shift, and go to state 45
    IDENT    shift, and go to state 46

    statement  go to state 146
    while      go to state 172
    var        go to state 49


State 165

   61 dowhile: ENDLOOP WHILE error .

    $default  reduce using rule 61 (dowhile)


State 166

   57 dowhile: ENDLOOP WHILE boolexpr .

    $default  reduce using rule 57 (dowhile)


State 167

   56 dowhile: statement SEMICOLON dowhile .

    $default  reduce using rule 56 (dowhile)


State 168

  102 term3: expression COMMA term3 .

    $default  reduce using rule 102 (term3)


State 169

   48 if: ELSE statement SEMICOLON . if

    error   shift, and go to state 131
    IF      shift, and go to state 39
    ENDIF   shift, and go to state 132
    ELSE    shift, and go to state 133
    WHILE   shift, and go to state 40
    DO      shift, and go to state 41
    BREAK   shift, and go to state 42
    READ    shift, and go to state 43
    WRITE   shift, and go to state 44
    RETURN  shift, and go to state 45
    IDENT   shift, and go to state 46

    statement  go to state 134
    if         go to state 173
    var        go to state 49


State 170

   47 if: statement SEMICOLON if .

    $default  reduce using rule 47 (if)


State 171

   55 while: statement SEMICOLON error .

    $default  reduce using rule 55 (while)


State 172

   52 while: statement SEMICOLON while .

    $default  reduce using rule 52 (while)


State 173

   48 if: ELSE statement SEMICOLON if .

    $default  reduce using rule 48 (if)
